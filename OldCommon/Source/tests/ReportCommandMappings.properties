# This file contains numerous hash values that define report command mappings.   
# A command is thought to be in the format of: 
# <Application Module>.<Report file name>.<Action Name>.<Command Type>
# 
# Three things can be identified by a report command that instructs how the appliation should navigate 
# based on certain conditions:  
#  1) the action handler that is to be executed
#  2) the URI that is to be executed upon success of the action handler.
#  3) the URI that is to be executed upon failure of the action handler.
#
# For example, this is a common transaction action handler: 
#     Project.EmployeeTimesheet.prepare.handler=com.action.report.ProjectTimesheetEditAction
#     Project.EmployeeTimesheet.prepare.success=
#     Project.EmployeeTimesheet.prepare.failure=/forms/sales/ErrorPage.jsp
#
#     Project.EmployeeTimesheet.generate.handler=com.action.report.ProjectTimesheetEditAction
#     Project.EmployeeTimesheet.generate.success=
#     Project.EmployeeTimesheet.generate.failure=/forms/sales/ErrorPage.jsp
#
# Since most reports display the polling JSP page as a response to the prepare command, the "success" 
# URI should be left blank so that 
#   1) the action handler can set the polling URI for the command servlet via the request object 
#      using RMT2ServletConst.REQUEST_DELAYED_RESPONSE as the attribute key.
#   2) or the report is streamed to the client via the HttpServletResponse object.


#################################
# General Code Group List
#################################
Project.EmployeeTimesheet.prepare.handler=com.action.codes.GeneralCodeGroupAction
Project.EmployeeTimesheet.prepare.success=
Project.EmployeeTimesheet.prepare.error
Project.EmployeeTimesheet.generate.handler=com.action.codes.GeneralCodeGroupAction
Project.EmployeeTimesheet.generate.success=
Project.EmployeeTimesheet.generate.error
