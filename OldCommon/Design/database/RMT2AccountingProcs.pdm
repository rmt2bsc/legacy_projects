<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" ID="{194E1B87-45E1-44EB-9655-DA4063E32A42}" Label="" Name="DB_RMT2_Base_Accounting_Procs" Objects="100" Symbols="26" Target="Microsoft SQL Server 2000" Type="{CDE44E21-9669-11D1-9914-006097355D9B}" signature="PDM_DATA_MODEL_XML" version="12.1.0.1913"?>
<!-- do not edit this file -->

<Model xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:RootObject Id="o1">
<c:Children>
<o:Model Id="o2">
<a:ObjectID>194E1B87-45E1-44EB-9655-DA4063E32A42</a:ObjectID>
<a:Name>DB_RMT2_Base_Accounting_Procs</a:Name>
<a:Code>DB_RMT2_BASE_ACCOUNTING_PROCS</a:Code>
<a:CreationDate>1157594480</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1181020307</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:PackageOptionsText>[FolderOptions]

[FolderOptions\Physical Objects]
GenerationCheckModel=Yes
GenerationPath=
GenerationOptions=
GenerationTasks=
GenerationTargets=
GenerationSelections=
RevPkey=Yes
RevFkey=Yes
RevAkey=Yes
RevCheck=Yes
RevIndx=Yes
RevOpts=Yes
RevViewAsTabl=No
RevViewOpts=Yes
RevSystAsTabl=Yes
RevTablPerm=No
RevViewPerm=No
RevProcPerm=No
RevDbpkPerm=No
RevSqncPerm=No
RevAdtPerm=No
RevUserPriv=No
RevUserOpts=No
RevGrpePriv=No
RevRolePriv=No
RevDtbsOpts=Yes
RevDtbsPerm=No
RevViewIndx=Yes
RevJidxOpts=Yes
RevStats=No
RevCaseSensitive=No
GenTrgrStdMsg=Yes
GenTrgrMsgTab=
GenTrgrMsgNo=
GenTrgrMsgTxt=
TrgrPreserve=No
TrgrIns=Yes
TrgrUpd=Yes
TrgrDel=Yes
TrgrC2Ins=Yes
TrgrC2Upd=Yes
TrgrC3=Yes
TrgrC4=Yes
TrgrC5=Yes
TrgrC6=Yes
TrgrC7=Yes
TrgrC8=Yes
TrgrC9=Yes
TrgrC10=Yes
TrgrC11=Yes
TrgrC1=Yes
TrgrC12Ins=Yes
TrgrC12Upd=Yes
TrgrC13=Yes
UpdateTableStatistics=Yes
UpdateColumnStatistics=Yes
RevSynmAsTabl=No
GenScriptName=exec_accounting_ddl.sql
GenScriptName0=exec_accounting_ddl.sql
GenScriptName1=exec_project_ddl.sql
GenScriptName2=exec_base_tables.sql
GenScriptName3=crebas.sql
GenScriptName4=crebas
GenScriptName5=
GenScriptName6=
GenScriptName7=
GenScriptName8=
GenScriptName9=
GenPathName=C:\temp\accounting\ddl\
GenSingleFile=No
GenTrgScriptName=exec_accounting_proc.sql
GenTrgScriptName0=exec_accounting_dml.sql
GenTrgScriptName1=exec_project_dml.sql
GenTrgScriptName2=exec_base.sql
GenTrgScriptName3=exec_acct.sql
GenTrgScriptName4=file.sql
GenTrgScriptName5=*.sql
GenTrgScriptName6=cretrg.trg
GenTrgScriptName7=cretrg
GenTrgScriptName8=
GenTrgScriptName9=
GenTrgPathName=C:\temp\accounting\proc\
GenTrgSingleFile=No
GenODBC=No
GenCheckModel=Yes
GenScriptPrev=Yes
GenArchiveModel=No
GenDataPathName=
GenDataSinglefile=Yes
GenDataScriptName=testdata
GenDataScriptName0=
GenDataScriptName1=
GenDataScriptName2=
GenDataScriptName3=
GenDataScriptName4=
GenDataScriptName5=
GenDataScriptName6=
GenDataScriptName7=
GenDataScriptName8=
GenDataScriptName9=
GenDataOdbc=No
GenDataDelOld=No
GenDataTitle=No
GenDataDefNumRows=20
GenDataCommit=0
GenDataPacket=0
GenDataCSV=No
GenDataOwner=No
GenDataProfNumb=
GenDataProfChar=
GenDataProfDate=
GenTspcCrea=No
GenTspcDrop=No
GenTspcHead=Yes
GenTspcFoot=Yes
GenTspcCmmt=No
GenStorCrea=No
GenStorDrop=No
GenStorCmmt=No
GenUddtCrea=Yes
GenUddtDval=Yes
GenUddtChck=Yes
GenUddtCmmt=No
GenUddtDrop=Yes
GenDeftCrea=Yes
GenDeftCmmt=Yes
GenDeftDrop=Yes
GenClssCrea=No
GenClssHead=No
GenClssFoot=No
GenClssCmmt=No
GenClssDrop=No
GenClssInst=No
GenClssSupp=No
GenClssPerm=No
GenDtbsCrea=No
GenDtbsOpts=No
GenDtbsHead=Yes
GenDtbsFoot=Yes
GenDtbsOpen=Yes
GenDtbsClose=No
GenDtbsDrop=No
GenUserCrea=Yes
GenUserGrant=No
GenUserDrop=Yes
GenUserPriv=No
GenGrpeCrea=No
GenGrpeDrop=No
GenGrpePriv=Yes
GenRoleCrea=Yes
GenRoleDrop=Yes
GenRolePriv=No
GenSynmCrea=No
GenSynmDrop=No
GenSynmTabl=Yes
GenSynmView=Yes
GenSynmProc=Yes
GenSynmSynm=Yes
GenSynmDbpk=Yes
GenSynmSqnc=Yes
GenTablCrea=Yes
GenTablChck=Yes
GenTablCntr=No
GenTablOpts=Yes
GenTablHead=Yes
GenTablFoot=Yes
GenTablCmmt=No
GenTablDrop=Yes
GenTablPerm=No
GenColnUddt=Yes
GenColnDval=Yes
GenColnChck=Yes
GenColnCntr=No
GenColnOpts=Yes
GenColnCmmt=No
GenPkeyCrea=Yes
GenPkeyCntr=No
GenPkeyOpts=Yes
GenPkeyDrop=Yes
GenPkeyCmmt=No
GenAkeyCrea=Yes
GenAkeyCntr=No
GenAkeyOpts=Yes
GenAkeyDrop=Yes
GenAkeyCmmt=No
GenRefrCrea=Yes
GenRefrCntr=Yes
GenRefrIdcl=Yes
GenRefrIDUR=Yes
GenRefrIDUC=Yes
GenRefrIDUN=No
GenRefrIDUD=No
GenRefrIDDR=Yes
GenRefrIDDC=Yes
GenRefrIDDN=No
GenRefrIDDD=No
GenRefrDrop=Yes
GenRefrCmmt=No
GenIndxCrea=Yes
GenIndxPkey=No
GenIndxFkey=Yes
GenIndxAkey=No
GenIndxClus=Yes
GenIndxOthr=Yes
GenIndxOpts=Yes
GenIndxCmmt=No
GenIndxDrop=Yes
GenViewCrea=Yes
GenViewHead=Yes
GenViewFoot=Yes
GenViewCmmt=No
GenViewDrop=Yes
GenViewPerm=No
GenViewOpts=Yes
GenJidxCrea=No
GenJidxHead=No
GenJidxFoot=No
GenJidxDrop=No
GenJidxCmmt=No
GenSqncCrea=No
GenSqncDrop=No
GenSqncCmmt=No
GenSqncPerm=No
GenTrgrCrea=Yes
GenTrgrDrop=Yes
GenTrgrCmmt=No
GenTrgrFIns=Yes
GenTrgrFUpd=Yes
GenTrgrFDel=Yes
GenTrgrFOth=Yes
GenProcCrea=Yes
GenProcDrop=Yes
GenProcHead=Yes
GenProcFoot=Yes
GenProcCmmt=No
GenProcPerm=No
GenScriptTitle=Yes
GenScriptNamLabl=No
GenScriptQDtbs=No
GenScriptQOwnr=Yes
GenScriptCase=0
GenScriptCharset=0
GenScriptNAcct=No
GenScriptODBC=No
GenUseSync=No
GenSyncChoice=0
GenSyncArch=
GenBackupTabl=1
GenKeepBackTabl=1
GenTmpTablDrop=No
GenRuleCrea=Yes
GenRuleDrop=Yes
GenRuleCmmt=No
GenSynmPathName=
GenSynmSinglefile=Yes
GenSynmScriptName=synonym
GenSynmScriptName0=
GenSynmScriptName1=
GenSynmScriptName2=
GenSynmScriptName3=
GenSynmScriptName4=
GenSynmScriptName5=
GenSynmScriptName6=
GenSynmScriptName7=
GenSynmScriptName8=
GenSynmScriptName9=
GenSynmOdbc=No
GenSynmTitle=No
GenSynmOwner=No
GenPrivPathName=
GenPrivSinglefile=Yes
GenPrivScriptName=privilege
GenPrivScriptName0=
GenPrivScriptName1=
GenPrivScriptName2=
GenPrivScriptName3=
GenPrivScriptName4=
GenPrivScriptName5=
GenPrivScriptName6=
GenPrivScriptName7=
GenPrivScriptName8=
GenPrivScriptName9=
GenPrivOdbc=No
GenPrivTitle=No
GenPrivOwner=No
GenDbpkCrea=No
GenDbpkDrop=No
GenDbpkPerm=No

[FolderOptions\Physical Objects\Database Generation]
GenScriptName=exec_accounting_proc.sql
GenScriptName0=exec_base_tables.sql
GenScriptName1=
GenScriptName2=
GenScriptName3=
GenScriptName4=
GenScriptName5=
GenScriptName6=
GenScriptName7=
GenScriptName8=
GenScriptName9=
GenPathName=C:\temp\accounting\proc\
GenSingleFile=No
GenODBC=No
GenCheckModel=Yes
GenScriptPrev=Yes
GenArchiveModel=No
GenUseSync=No
GenSyncChoice=0
GenSyncArch=
GenSyncRmg=0

[FolderOptions\Physical Objects\Database Generation\Format]
GenScriptTitle=Yes
GenScriptNamLabl=No
GenScriptQDtbs=No
GenScriptQOwnr=Yes
GenScriptCase=0
GenScriptEncoding=ANSI
GenScriptNAcct=No
IdentifierDelimiter=&quot;

[FolderOptions\Physical Objects\Database Generation\Database]
Create=Yes
Open=Yes
Close=Yes
Drop=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\Database\Create]
Physical Options=Yes
Header=Yes
Footer=Yes

[FolderOptions\Physical Objects\Database Generation\Tablespace]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Tablespace\Create]
Header=Yes
Footer=Yes

[FolderOptions\Physical Objects\Database Generation\Storage]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\User]
Create=Yes
Grant=Yes
Drop=Yes
Comment=Yes
Privilege=No

[FolderOptions\Physical Objects\Database Generation\User\Create]
Physical Options=No

[FolderOptions\Physical Objects\Database Generation\Group]
Create=Yes
Drop=Yes
Comment=Yes
Privilege=No

[FolderOptions\Physical Objects\Database Generation\Role]
Create=Yes
Drop=Yes
Privilege=No

[FolderOptions\Physical Objects\Database Generation\UserDefinedDataType]
Create=Yes
Comment=Yes
Drop=Yes

[FolderOptions\Physical Objects\Database Generation\UserDefinedDataType\Create]
Default value=Yes
Check=Yes

[FolderOptions\Physical Objects\Database Generation\AbstractDataType]
Create=Yes
Header=Yes
Footer=Yes
Drop=Yes
Comment=Yes
Install JAVA class=Yes
Remove JAVA class=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\Rule]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Default]
Create=Yes
Comment=Yes
Drop=Yes

[FolderOptions\Physical Objects\Database Generation\Sequence]
Create=Yes
Drop=Yes
Comment=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column]

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Table]
Create=Yes
Drop=Yes
Comment=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Table\Create]
Check=Yes
Physical Options=Yes
Header=Yes
Footer=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Table\Create\Check]
Constraint declaration=No

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Column]
User datatype=Yes
Default value=Yes
Check=Yes
Physical Options=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Column\Check]
Constraint declaration=No

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Key]

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Key\Primary key]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Key\Primary key\Create]
Constraint declaration=No
Physical Options=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Key\Alternate key]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Key\Alternate key\Create]
Constraint declaration=No
Physical Options=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Foreign key]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Foreign key\Create]
Constraint declaration=Yes
Declarative integrity=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Foreign key\Create\Declarative integrity]
Update constraint restrict=Yes
Update constraint cascade=Yes
Update constraint set null=Yes
Update constraint set default=Yes
Delete constraint restrict=Yes
Delete constraint cascade=Yes
Delete constraint set null=Yes
Delete constraint set default=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Index]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Index\Create]
Constraint declaration=Yes
Physical Options=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Index\Filter]
Primary key=No
Foreign key=Yes
Alternate key=No
Cluster=Yes
Other=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Trigger]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Table&amp;&amp;Column\Trigger\Filter]
For insert=Yes
For update=Yes
For delete=Yes
For other=Yes

[FolderOptions\Physical Objects\Database Generation\View]
Create=Yes
Drop=Yes
Comment=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\View\Create]
Force Column list=No
Physical Options=Yes
Header=Yes
Footer=Yes

[FolderOptions\Physical Objects\Database Generation\View\ViewColumn]
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\View\ViewIndex]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\View\ViewIndex\Create]
Constraint declaration=Yes
Physical Options=Yes

[FolderOptions\Physical Objects\Database Generation\View\ViewIndex\Filter]
Primary key=Yes
Foreign key=Yes
Alternate key=Yes
Cluster=Yes
Other=Yes

[FolderOptions\Physical Objects\Database Generation\View\Trigger]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\View\Trigger\Filter]
For insert=Yes
For update=Yes
For delete=Yes
For other=Yes

[FolderOptions\Physical Objects\Database Generation\Synonym]
Create=Yes
Drop=Yes

[FolderOptions\Physical Objects\Database Generation\Synonym\Filter]
Table=Yes
View=Yes
Proc=Yes
Synonym=Yes
Database Package=Yes
Sequence=Yes

[FolderOptions\Physical Objects\Database Generation\JoinIndex]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\JoinIndex\Create]
Physical Options=Yes
Header=Yes
Footer=Yes

[FolderOptions\Physical Objects\Database Generation\Procedure]
Create=Yes
Drop=Yes
Comment=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\Procedure\Create]
Header=Yes
Footer=Yes

[FolderOptions\Physical Objects\Database Generation\DatabasePackage]
Create=Yes
Drop=Yes
Permission=No

[FolderOptions\Physical Objects\Database Generation\WebService]
Create=Yes
Drop=Yes
Comment=Yes

[FolderOptions\Physical Objects\Database Generation\Dimension]
Create=Yes
Drop=Yes

[FolderOptions\Physical Objects\Database Generation\Synchronization]
GenBackupTabl=1
GenKeepBackTabl=1
GenTmpTablDrop=No
GenKeepTablOpts=No

[FolderOptions\Physical Objects\Test Data]
GenDataPathName=
GenDataSinglefile=Yes
GenDataScriptName=testdata
GenDataScriptName0=
GenDataScriptName1=
GenDataScriptName2=
GenDataScriptName3=
GenDataScriptName4=
GenDataScriptName5=
GenDataScriptName6=
GenDataScriptName7=
GenDataScriptName8=
GenDataScriptName9=
GenDataOdbc=0
GenDataDelOld=No
GenDataTitle=No
GenDataDefNumRows=20
GenDataCommit=0
GenDataPacket=0
GenDataOwner=No
GenDataProfNumb=
GenDataProfChar=
GenDataProfDate=
GenDataCSVSeparator=,
GenDataFileFormat=CSV
GenDataUseWizard=No

[FolderOptions\Pdm]
IndxIQName=%COLUMN%_%INDEXTYPE%
IndxPK=Yes
IndxFK=Yes
IndxAK=Yes
IndxPKName=%TABLE%_PK
IndxFKName=%REFR%_FK
IndxAKName=%AKEY%_AK
IndxPreserve=No
IndxThreshold=0
IndxStats=No
RefrPreserve=No
JidxPreserve=No
RbldMultiFact=Yes
RbldMultiDim=Yes
RbldMultiJidx=Yes
CubePreserve=No
TablStProcPreserve=No
ProcDepPreserve=Yes
CubeScriptPath=
CubeScriptCase=0
CubeScriptEncoding=ANSI
CubeScriptNacct=No
CubeScriptHeader=No
CubeScriptExt=csv
CubeScriptExt0=txt
CubeScriptExt1=
CubeScriptExt2=
CubeScriptSep=,
CubeScriptDeli=&quot;
DfltDomnName=D_%.U:VALUE%
DfltColnName=D_%.U:VALUE%
DfltReuse=Yes
DfltDrop=Yes
CubeScriptCharset=0
TrgrPreserve=No
TrgrIns=Yes
TrgrUpd=Yes
TrgrDel=Yes
TrgrC2Ins=Yes
TrgrC2Upd=Yes
TrgrC3=Yes
TrgrC4=Yes
TrgrC5=Yes
TrgrC6=Yes
TrgrC7=Yes
TrgrC8=Yes
TrgrC9=Yes
TrgrC10=Yes
TrgrC11=Yes
TrgrC1=Yes
TrgrC12Ins=Yes
TrgrC12Upd=Yes
TrgrC13=Yes

[FolderOptions\CheckModel]

[FolderOptions\CheckModel\Replication]

[FolderOptions\CheckModel\Replication\PartialReplication]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Package]

[FolderOptions\CheckModel\Package\CircularReference]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Package\ConstraintName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Package\CnstMaxLen]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Package\CircularDependency]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Package\ShortcutUniqCode]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table]

[FolderOptions\CheckModel\Table\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\UniqIndex]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\MaxLen - NAME]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\EmptyColl - COLNCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\EmptyColl - INDXCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\EmptyColl - KEYCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\SerialColumnNumber]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\EmptyCollYesYes]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\TableIndexes]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\Mapping]
CheckSeverity=No
FixRequested=Yes
CheckRequested=Yes

[FolderOptions\CheckModel\Table\MappingSFMap]
CheckSeverity=No
FixRequested=Yes
CheckRequested=Yes

[FolderOptions\CheckModel\Table\EmptyColl - PERMCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Table\MSSQLSRV2000_Table_Clustered_key_uniqueness]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table\MSSQLSRV2000_Table_Table_Timestamp_Uniqueness]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column]

[FolderOptions\CheckModel\Table.Column\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\DomainDivergence]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\ColumnMandatory]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\CheckNumParam]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\CheckPrecSupLng]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\CheckUndefDttp]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\FkeyDttpDivergence]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\FkeyCheckDivergence]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\ColnSqncNoKey]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\ColnSqncDttp]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\ColumnCompExpr]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\SerialColumnFK]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Column\MSSQLSRV2000_Column_Identity_Seed_and_Increment_validity]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index]

[FolderOptions\CheckModel\Table.Index\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\EmptyColl - CIDXCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\UndefIndexType]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\IndexColumnCount]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\IQIndxHNGUniq]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Index\CheckIncludeColl - Tabl]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Key]

[FolderOptions\CheckModel\Table.Key\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Key\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Key\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Key\EmptyColl - COLNCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Key\CheckIncludeColl - Tabl]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Key\MultiKeySqnc]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Trigger]

[FolderOptions\CheckModel\Table.Trigger\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Trigger\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table.Trigger\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Join Index]

[FolderOptions\CheckModel\Join Index\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Join Index\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Join Index\IQJoinIndexOwner]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Join Index\IQJoinIndexRelationships]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Join Index\IQJoinIndexDuplicates]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View]

[FolderOptions\CheckModel\View\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View\EmptyColl - Permissions]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\View\EmptyColl - PERMCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Reference]

[FolderOptions\CheckModel\Reference\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Reference\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Reference\Reflexive]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Reference\EmptyColl - RFJNCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Reference\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Reference\IncompleteJoin]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Reference\JoinOrder]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View Reference]

[FolderOptions\CheckModel\View Reference\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View Reference\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View Reference\EmptyColl - VRFJNCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain]

[FolderOptions\CheckModel\Domain\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain\CheckNumParam]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain\CheckPrecSupLng]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain\CheckUndefDttp]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Domain\MSSQLSRV2000_PhysicalDomain_Domain_missing_default_object]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Default]

[FolderOptions\CheckModel\Default\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Default\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Default\DfltValeEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Default\DfltSameVale]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Default\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\User]

[FolderOptions\CheckModel\User\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\User\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\User\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\User\CheckTextAttrEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Group]

[FolderOptions\CheckModel\Group\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Group\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Group\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Group\EmptyColl - USERCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Group\CheckTextAttrEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Role]

[FolderOptions\CheckModel\Role\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Role\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Role\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Role\EmptyColl - USERCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Procedure]

[FolderOptions\CheckModel\Procedure\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Procedure\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Procedure\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Procedure\ProcBodyEmpty]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Procedure\EmptyColl - PERMCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Business Rule]

[FolderOptions\CheckModel\Business Rule\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Business Rule\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Business Rule\EmptyColl - OBJCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\File]

[FolderOptions\CheckModel\File\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\File\CheckPathExists]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Data Source]

[FolderOptions\CheckModel\Data Source\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Data Source\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Data Source\EmptyColl - MODLSRC]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Data Source\DtscTargets]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Horizontal Partitioning]

[FolderOptions\CheckModel\Horizontal Partitioning\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Horizontal Partitioning\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Horizontal Partitioning\EmptyColl - PARTCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Horizontal Partitioning\TargetTables]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Vertical Partitioning]

[FolderOptions\CheckModel\Vertical Partitioning\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Vertical Partitioning\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Vertical Partitioning\EmptyColl - PARTCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Vertical Partitioning\TargetTables]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table Collapsing]

[FolderOptions\CheckModel\Table Collapsing\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table Collapsing\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table Collapsing\EmptyColl - TargetTable]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Table Collapsing\TargetTables]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Cube]

[FolderOptions\CheckModel\Cube\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Cube\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Cube\EmptyColl - LinkDst]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Cube\EmptyColl - Facts]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Cube\CubeDupAssociation]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Fact]

[FolderOptions\CheckModel\Fact\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Fact\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Fact\EmptyColl - MEASCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Fact\Mapping]
CheckSeverity=No
FixRequested=Yes
CheckRequested=Yes

[FolderOptions\CheckModel\Fact\MappingSFMap]
CheckSeverity=No
FixRequested=Yes
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension]

[FolderOptions\CheckModel\Dimension\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\EmptyColl - DATTRCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\EmptyColl - HIERCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\DimnDupHierarchy]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\DimnDefHierarchy]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\Mapping]
CheckSeverity=No
FixRequested=Yes
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\MappingSFMap]
CheckSeverity=No
FixRequested=Yes
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension\SerialColumnNumber]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Association]

[FolderOptions\CheckModel\Association\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Association\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Association\EmptyColl - Hierarchy]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension.Attribute]

[FolderOptions\CheckModel\Dimension.Attribute\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension.Attribute\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Fact.Measure]

[FolderOptions\CheckModel\Fact.Measure\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Fact.Measure\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension.Hierarchy]

[FolderOptions\CheckModel\Dimension.Hierarchy\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension.Hierarchy\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Dimension.Hierarchy\EmptyColl - DATTRCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Synonym]

[FolderOptions\CheckModel\Synonym\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Synonym\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Synonym\MaxLen - NAME]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Synonym\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Synonym\EmptyColl - BASEOBJ]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package]

[FolderOptions\CheckModel\Database Package\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package\MaxLen - NAME]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package\EmptyColl - PROCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package\EmptyColl - CURCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Database Package\EmptyColl - VARCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Database Package\EmptyColl - TYPCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Database Package\EmptyColl - EXCCOL]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Database Package.Package Procedure]

[FolderOptions\CheckModel\Database Package.Package Procedure\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Procedure\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Procedure\CheckTextAttrEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Procedure\EmptyColl - PARM]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Database Package.Package Procedure\ReturnDataType]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Cursor]

[FolderOptions\CheckModel\Database Package.Package Cursor\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Cursor\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Cursor\CheckTextAttrEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Cursor\ReturnDataType]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Cursor\EmptyColl - PARM]
CheckSeverity=Yes
FixRequested=No
CheckRequested=No

[FolderOptions\CheckModel\Database Package.Package Variable]

[FolderOptions\CheckModel\Database Package.Package Variable\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Variable\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Variable\CheckUndefDttp]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Type]

[FolderOptions\CheckModel\Database Package.Package Type\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Type\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Type\CheckTextAttrEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Exception]

[FolderOptions\CheckModel\Database Package.Package Exception\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database Package.Package Exception\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View.View Index]

[FolderOptions\CheckModel\View.View Index\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View.View Index\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View.View Index\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View.View Index\EmptyColl - CIDXCOL]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View.View Index\IndexColumnCount]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\View.View Index\CheckIncludeColl - Tabl]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Extended Object]

[FolderOptions\CheckModel\Extended Object\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Extended Object\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Extended Link]

[FolderOptions\CheckModel\Extended Link\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Extended Link\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type]

[FolderOptions\CheckModel\Abstract Data Type\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type\AdtInstantiable]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type\AdtAbstractUsed]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type.Abstract Data Type Procedure]

[FolderOptions\CheckModel\Abstract Data Type.Abstract Data Type Procedure\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type.Abstract Data Type Procedure\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type.Abstract Data Type Procedure\AdtProcUniqName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type.Abstract Data Type Procedure\CheckTextAttrEmpty]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Abstract Data Type.Abstract Data Type Procedure\ReturnDataType]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Tablespace]

[FolderOptions\CheckModel\Tablespace\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Tablespace\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Tablespace\IsObjectUsed]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Storage]

[FolderOptions\CheckModel\Storage\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Storage\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Storage\IsObjectUsed]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database]

[FolderOptions\CheckModel\Database\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Database\IsObjectUsed]
CheckSeverity=Yes
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Web Service]

[FolderOptions\CheckModel\Web Service\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Web Service\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Web Service\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Web Service.Web Operation]

[FolderOptions\CheckModel\Web Service.Web Operation\UniqueName]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Web Service.Web Operation\UniqueCode]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Web Service.Web Operation\MaxLen - CODE]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes

[FolderOptions\CheckModel\Physical Data Model]

[FolderOptions\CheckModel\Physical Data Model\MSSQLSRV2000_Model_Storage_requires_a_database_]
CheckSeverity=No
FixRequested=No
CheckRequested=Yes</a:PackageOptionsText>
<a:ModelOptionsText>[ModelOptions]

[ModelOptions\Physical Objects]
CaseSensitive=No
DisplayName=Yes
EnableTrans=No
EnableRequirements=No
DefaultDttp=
IgnoreOwner=No
RebuildTrigger=Yes
RefrUnique=No
RefrAutoMigrate=Yes
RefrMigrateReuse=Yes
RefrMigrateDomain=Yes
RefrMigrateCheck=Yes
RefrMigrateRule=Yes
RefrMigrateExtd=No
RefrMigrDefaultLink=No
RefrDfltImpl=D
RefrPrgtColn=No
RefrMigrateToEnd=No
ColnFKName=%.3:PARENT%_%COLUMN%
ColnFKNameUse=No
DomnCopyDttp=No
DomnCopyChck=No
DomnCopyRule=No
DomnCopyMand=No
DomnCopyExtd=No
DomnCopyProf=No
Notation=0
DomnDefaultMandatory=No
ColnDefaultMandatory=No
TablDefaultOwner=
ViewDefaultOwner=
TrgrDefaultOwnerTabl=
TrgrDefaultOwnerView=
IdxDefaultOwnerTabl=
IdxDefaultOwnerView=
JdxDefaultOwner=
DBPackDefaultOwner=
SeqDefaultOwner=
ProcDefaultOwner=
RefrDeleteConstraint=1
RefrUpdateConstraint=1
RefrParentMandatory=No
RefrParentChangeAllow=Yes
RefrCheckOnCommit=No

[ModelOptions\Physical Objects\NamingOptionsTemplates]

[ModelOptions\Physical Objects\ClssNamingOptions]

[ModelOptions\Physical Objects\ClssNamingOptions\PDMPCKG]

[ModelOptions\Physical Objects\ClssNamingOptions\PDMPCKG\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\PDMPCKG\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\PDMDOMN]

[ModelOptions\Physical Objects\ClssNamingOptions\PDMDOMN\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\PDMDOMN\Code]
Template=
MaxLen=128
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\TABL]

[ModelOptions\Physical Objects\ClssNamingOptions\TABL\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\TABL\Code]
Template=
MaxLen=128
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\COLN]

[ModelOptions\Physical Objects\ClssNamingOptions\COLN\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\COLN\Code]
Template=
MaxLen=128
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\INDX]

[ModelOptions\Physical Objects\ClssNamingOptions\INDX\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\INDX\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\REFR]

[ModelOptions\Physical Objects\ClssNamingOptions\REFR\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\REFR\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\VREF]

[ModelOptions\Physical Objects\ClssNamingOptions\VREF\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\VREF\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\VIEW]

[ModelOptions\Physical Objects\ClssNamingOptions\VIEW\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\VIEW\Code]
Template=
MaxLen=128
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\VIEWC]

[ModelOptions\Physical Objects\ClssNamingOptions\VIEWC\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\VIEWC\Code]
Template=
MaxLen=254
Case=U
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\WEBSERV]

[ModelOptions\Physical Objects\ClssNamingOptions\WEBSERV\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\WEBSERV\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;/-_.!~*&#39;()&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\WEBOP]

[ModelOptions\Physical Objects\ClssNamingOptions\WEBOP\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\WEBOP\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;/-_.!~*&#39;()&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\WPARAM]

[ModelOptions\Physical Objects\ClssNamingOptions\WPARAM\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\WPARAM\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FACT]

[ModelOptions\Physical Objects\ClssNamingOptions\FACT\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FACT\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\DIMN]

[ModelOptions\Physical Objects\ClssNamingOptions\DIMN\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\DIMN\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\CUBE]

[ModelOptions\Physical Objects\ClssNamingOptions\CUBE\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\CUBE\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\MEAS]

[ModelOptions\Physical Objects\ClssNamingOptions\MEAS\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\MEAS\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\DATTR]

[ModelOptions\Physical Objects\ClssNamingOptions\DATTR\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\DATTR\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FILO]

[ModelOptions\Physical Objects\ClssNamingOptions\FILO\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=&quot;\/:*?&lt;&gt;|&quot;
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FILO\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_.&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FRMEOBJ]

[ModelOptions\Physical Objects\ClssNamingOptions\FRMEOBJ\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FRMEOBJ\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FRMELNK]

[ModelOptions\Physical Objects\ClssNamingOptions\FRMELNK\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\FRMELNK\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\DefaultClass]

[ModelOptions\Physical Objects\ClssNamingOptions\DefaultClass\Name]
Template=
MaxLen=254
Case=M
ValidChar=
InvldChar=
AllValid=Yes
NoAccent=No
DefaultChar=_
Script=.convert_name(%Name%,&quot;_&quot;)
ConvTable=

[ModelOptions\Physical Objects\ClssNamingOptions\DefaultClass\Code]
Template=
MaxLen=254
Case=U
ValidChar=&#39;a&#39;-&#39;z&#39;,&#39;A&#39;-&#39;Z&#39;,&#39;0&#39;-&#39;9&#39;,&quot;_&quot;
InvldChar=
AllValid=No
NoAccent=Yes
DefaultChar=_
Script=.convert_code(%Code%,&quot; &quot;)
ConvTable=

[ModelOptions\Connection]

[ModelOptions\Pdm]

[ModelOptions\Generate]

[ModelOptions\Generate\Cdm]
CheckModel=Yes
SaveLinks=Yes
NameToCode=No
Notation=2

[ModelOptions\Generate\Oom]
CheckModel=Yes
SaveLinks=Yes
ORMapping=No
NameToCode=No
ClassPrefix=

[ModelOptions\Generate\Xsm]
CheckModel=Yes
SaveLinks=Yes
ORMapping=No
NameToCode=No

[ModelOptions\Default Opts]

[ModelOptions\Default Opts\TABL]
PhysOpts=

[ModelOptions\Default Opts\COLN]
PhysOpts=

[ModelOptions\Default Opts\INDX]
PhysOpts=

[ModelOptions\Default Opts\AKEY]
PhysOpts=

[ModelOptions\Default Opts\PKEY]
PhysOpts=

[ModelOptions\Default Opts\STOR]
PhysOpts=

[ModelOptions\Default Opts\TSPC]
PhysOpts=

[ModelOptions\Default Opts\SQNC]
PhysOpts=

[ModelOptions\Default Opts\DTBS]
PhysOpts=

[ModelOptions\Default Opts\USER]
PhysOpts=

[ModelOptions\Default Opts\JIDX]
PhysOpts=</a:ModelOptionsText>
<c:DBMS>
<o:Shortcut Id="o3">
<a:ObjectID>1EE5E431-822C-4009-9195-44F63B4A891B</a:ObjectID>
<a:Name>Microsoft SQL Server 2000</a:Name>
<a:Code>MSSQLSRV2000</a:Code>
<a:CreationDate>1157594480</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157594480</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetStereotype/>
<a:TargetID>E2B854D3-FF56-485F-BEF3-98AEC7E65DDC</a:TargetID>
<a:TargetClassID>4BA9F647-DAB1-11D1-9944-006097355D9B</a:TargetClassID>
<a:GenerationType>0</a:GenerationType>
</o:Shortcut>
</c:DBMS>
<c:PhysicalDiagrams>
<o:PhysicalDiagram Id="o4">
<a:ObjectID>AC112D84-E0B0-443C-BB81-F822C5A5EAB0</a:ObjectID>
<a:Name>Model_RMT2_Base_Accounting_Procs</a:Name>
<a:Code>MODEL_RMT2_BASE_ACCOUNTING_PROCS</a:Code>
<a:CreationDate>1157594480</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595590</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:DisplayPreferences>[DisplayPreferences]

[DisplayPreferences\PDM]

[DisplayPreferences\General]
Adjust to text=Yes
Snap Grid=No
Display Grid=No
Show Page Delimiter=Yes
Grid size=0
Graphic unit=2
Window color=255, 255, 255
Background image=
Background mode=8
Watermark image=
Watermark mode=8
Show watermark on screen=No
Gradient mode=0
Gradient end color=255, 255, 255
Show Swimlane=Yes
SwimlaneVert=Yes
TreeVert=No

[DisplayPreferences\Object]
Mode=0
Trunc Length=80
Word Length=80
Word Text=!&quot;&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[\]^_`{|}~
Shortcut IntIcon=Yes
Shortcut IntLoct=Yes
Shortcut IntFullPath=No
Shortcut IntLastPackage=Yes
Shortcut ExtIcon=Yes
Shortcut ExtLoct=No
Shortcut ExtFullPath=No
Shortcut ExtLastPackage=Yes
Shortcut ExtIncludeModl=Yes
EObjShowStrn=Yes
ExtendedObject.Comment=No
ELnkShowStrn=Yes
ELnkShowName=Yes
File Location=No
PckgStrn=Yes
Package.Comment=No
Display Model Version=Yes
TablColn=Yes
ColnMode=0
ColnMax=5
TablIndx=No
TablKey=No
TablTrgr=No
TablOwnr=No
TablStrn=Yes
TablCmmt=No
ColnDttp=Yes
ColnDomn=No
ColnShowDomn=No
ColnKey=Yes
ColnIndx=No
ColnMand=No
ColnStrn=Yes
ViewTabl=Yes
ViewIndx=No
ViewColn=Yes
ViewOwnr=No
ViewStrn=Yes
ViewCmmt=No
VColName=Yes
VColExpr=No
VColDttp=No
VColIndx=No
VColCMod=1
VColCMax=5
RefrName=No
RefrJoin=No
RefrCnam=Yes
RefrIntg=No
RefrImpl=No
RefrCard=No
RefrStrn=Yes
RefrRole=Yes
VRefName=No
VRefJoin=No
VRefStrn=Yes
VRefRole=Yes
ProcOwnr=No
KeyStrn=Yes
IndxStrn=Yes
TrgrStrn=Yes
ProcStrn=No
Procedure.Comment=No
RefrMode=0
VRefMode=0

[DisplayPreferences\Symbol]

[DisplayPreferences\Symbol\FRMEOBJ]
STRNFont=Arial,8,N
STRNFont color=0, 0, 0
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
LABLFont=Arial,8,N
LABLFont color=0, 0, 0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Width=6000
Height=2000
Brush color=255 255 255
Fill Color=Yes
Brush style=6
Brush bitmap mode=12
Brush gradient mode=64
Brush gradient color=192 192 192
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 255 128 128
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\FRMELNK]
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
Line style=0
Pen=1 0 128 128 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\PDMPCKG]
PckgStereotypeFont=Arial,8,N
PckgStereotypeFont color=0, 0, 0
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
LABLFont=Arial,8,N
LABLFont color=0, 0, 0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Width=4800
Height=3600
Brush color=255 255 192
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\TABL]
TablStrnFont=Arial,8,N
TablStrnFont color=0, 0, 0
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
TableColumnsFont=Arial,8,N
TableColumnsFont color=0, 0, 0
TablePkColumnsFont=Arial,8,U
TablePkColumnsFont color=0, 0, 0
TableFkColumnsFont=Arial,8,N
TableFkColumnsFont color=0, 0, 0
TableKeysFont=Arial,8,N
TableKeysFont color=0, 0, 0
TableIndexsFont=Arial,8,N
TableIndexsFont color=0, 0, 0
TableTriggersFont=Arial,8,N
TableTriggersFont color=0, 0, 0
TableCommentFont=Arial,8,N
TableCommentFont color=0, 0, 0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Width=4800
Height=4000
Brush color=192 255 192
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\REFR]
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
CARDFont=Arial,8,N
CARDFont color=0, 0, 0
Line style=0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Brush color=255 255 255
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\VREF]
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
Line style=0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Brush color=255 255 255
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\VIEW]
ViewStrnFont=Arial,8,N
ViewStrnFont color=0, 0, 0
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
ViewColumnnFont=Arial,8,N
ViewColumnnFont color=0, 0, 0
ViewIndexesFont=Arial,8,N
ViewIndexesFont color=0, 0, 0
ViewTablesFont=Arial,8,N
ViewTablesFont color=0, 0, 0
ViewCommentFont=Arial,8,N
ViewCommentFont color=0, 0, 0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Width=4800
Height=4000
Brush color=208 208 255
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\PROC]
STRNFont=Arial,8,N
STRNFont color=0, 0, 0
DISPNAMEFont=Arial,8,N
DISPNAMEFont color=0, 0, 0
LABLFont=Arial,8,N
LABLFont color=0, 0, 0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Width=4000
Height=1000
Brush color=255 255 192
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\FILO]
NAMEFont=Arial,8,N
NAMEFont color=0, 0, 0
AutoAdjustToText=Yes
Keep aspect=Yes
Keep center=Yes
Keep size=No
Width=2400
Height=2400
Brush color=255 255 255
Fill Color=No
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\USRDEPD]
OBJXSTRFont=Arial,8,N
OBJXSTRFont color=0, 0, 0
Line style=0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Brush color=255 255 255
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=2 0 0 0 255
Shadow color=192 192 192
Shadow=0

[DisplayPreferences\Symbol\Free Symbol]
Free TextFont=Arial,8,N
Free TextFont color=0, 0, 0
Line style=0
AutoAdjustToText=Yes
Keep aspect=No
Keep center=No
Keep size=No
Brush color=255 255 255
Fill Color=Yes
Brush style=1
Brush bitmap mode=12
Brush gradient mode=0
Brush gradient color=118 118 118
Brush background image=
Custom shape=
Custom text mode=0
Pen=1 0 0 0 255
Shadow color=192 192 192
Shadow=0</a:DisplayPreferences>
<a:PaperSize>(8500, 11000)</a:PaperSize>
<a:PageMargins>((315,354), (433,354))</a:PageMargins>
<a:Scale>50</a:Scale>
<a:PageOrientation>1</a:PageOrientation>
<a:PaperSource>7</a:PaperSource>
<c:Symbols>
<o:ExtendedDependencySymbol Id="o5">
<a:CreationDate>1157595259</a:CreationDate>
<a:ModificationDate>1157595259</a:ModificationDate>
<a:Rect>((-33860,40123), (-22160,49048))</a:Rect>
<a:ListOfPoints>((-24036,40123),(-31986,49048))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o6"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o7"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o8"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o9">
<a:CreationDate>1157595259</a:CreationDate>
<a:ModificationDate>1157595259</a:ModificationDate>
<a:Rect>((-23887,40253), (-9561,49873))</a:Rect>
<a:ListOfPoints>((-23887,40253),(-9561,49873))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o6"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o10"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o11"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o12">
<a:CreationDate>1157595428</a:CreationDate>
<a:ModificationDate>1157595428</a:ModificationDate>
<a:Rect>((-26136,28573), (-8286,39448))</a:Rect>
<a:ListOfPoints>((-26136,28573),(-8286,39448))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o13"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o14"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o15"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o16">
<a:CreationDate>1157595428</a:CreationDate>
<a:ModificationDate>1157595428</a:ModificationDate>
<a:Rect>((-28648,28703), (-21148,40383))</a:Rect>
<a:ListOfPoints>((-25986,28703),(-23737,40383))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o13"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o6"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o17"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o18">
<a:CreationDate>1157595475</a:CreationDate>
<a:ModificationDate>1157595475</a:ModificationDate>
<a:Rect>((-10198,22573), (-2698,28648))</a:Rect>
<a:ListOfPoints>((-9561,28648),(-3336,22573))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o19"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o20"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o21"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o22">
<a:CreationDate>1157595475</a:CreationDate>
<a:ModificationDate>1157595475</a:ModificationDate>
<a:Rect>((-12604,28778), (-5104,39448))</a:Rect>
<a:ListOfPoints>((-9412,28778),(-8286,39448))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o19"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o14"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o23"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o24">
<a:CreationDate>1157595497</a:CreationDate>
<a:ModificationDate>1157595497</a:ModificationDate>
<a:Rect>((-3336,22573), (6413,28423))</a:Rect>
<a:ListOfPoints>((6413,28423),(-3336,22573))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o25"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o20"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o26"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o27">
<a:CreationDate>1157595497</a:CreationDate>
<a:ModificationDate>1157595497</a:ModificationDate>
<a:Rect>((-8286,28553), (6563,39448))</a:Rect>
<a:ListOfPoints>((6563,28553),(-8286,39448))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o25"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o14"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o28"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o29">
<a:CreationDate>1157595528</a:CreationDate>
<a:ModificationDate>1157595528</a:ModificationDate>
<a:Rect>((6224,45148), (17924,50623))</a:Rect>
<a:ListOfPoints>((12187,50623),(11962,45148))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o30"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o31"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o32"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o33">
<a:CreationDate>1157595572</a:CreationDate>
<a:ModificationDate>1157595572</a:ModificationDate>
<a:Rect>((22106,27823), (33806,37573))</a:Rect>
<a:ListOfPoints>((31876,27823),(24038,37573))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o34"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o35"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o36"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o37">
<a:CreationDate>1157595572</a:CreationDate>
<a:ModificationDate>1157595572</a:ModificationDate>
<a:Rect>((30245,27953), (41945,37348))</a:Rect>
<a:ListOfPoints>((32026,27953),(40277,37348))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o34"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o38"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o39"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ExtendedDependencySymbol Id="o40">
<a:CreationDate>1157595590</a:CreationDate>
<a:ModificationDate>1157595590</a:ModificationDate>
<a:Rect>((25902,18373), (37602,28083))</a:Rect>
<a:ListOfPoints>((32175,28083),(31351,18373))</a:ListOfPoints>
<a:ArrowStyle>8</a:ArrowStyle>
<a:LineColor>16711680</a:LineColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>OBJXSTR 0 Arial,8,N</a:FontList>
<c:SourceSymbol>
<o:ProcedureSymbol Ref="o34"/>
</c:SourceSymbol>
<c:DestinationSymbol>
<o:ProcedureSymbol Ref="o41"/>
</c:DestinationSymbol>
<c:Object>
<o:ExtendedDependency Ref="o42"/>
</c:Object>
</o:ExtendedDependencySymbol>
<o:ProcedureSymbol Id="o7">
<a:CreationDate>1157594852</a:CreationDate>
<a:ModificationDate>1157594852</a:ModificationDate>
<a:Rect>((-37035,48399), (-26938,49698))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o43"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o6">
<a:CreationDate>1157594859</a:CreationDate>
<a:ModificationDate>1157594859</a:ModificationDate>
<a:Rect>((-27509,39474), (-20563,40773))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o44"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o10">
<a:CreationDate>1157594975</a:CreationDate>
<a:ModificationDate>1157594975</a:ModificationDate>
<a:Rect>((-14722,49224), (-4401,50523))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o45"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o13">
<a:CreationDate>1157594983</a:CreationDate>
<a:ModificationDate>1157594983</a:ModificationDate>
<a:Rect>((-31072,27924), (-21200,29223))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o46"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o14">
<a:CreationDate>1157595011</a:CreationDate>
<a:ModificationDate>1157595036</a:ModificationDate>
<a:Rect>((-13260,38799), (-3313,40098))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o47"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o19">
<a:CreationDate>1157595023</a:CreationDate>
<a:ModificationDate>1157595042</a:ModificationDate>
<a:Rect>((-13635,27999), (-5488,29298))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o48"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o25">
<a:CreationDate>1157595032</a:CreationDate>
<a:ModificationDate>1157595044</a:ModificationDate>
<a:Rect>((2077,27774), (10749,29073))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o49"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o20">
<a:CreationDate>1157595058</a:CreationDate>
<a:ModificationDate>1157595058</a:ModificationDate>
<a:Rect>((-7897,21924), (1225,23223))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o50"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o30">
<a:CreationDate>1157595074</a:CreationDate>
<a:ModificationDate>1157595074</a:ModificationDate>
<a:Rect>((7439,49974), (16936,51273))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o51"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o31">
<a:CreationDate>1157595084</a:CreationDate>
<a:ModificationDate>1157595086</a:ModificationDate>
<a:Rect>((7664,44499), (16261,45798))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o52"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o35">
<a:CreationDate>1157595109</a:CreationDate>
<a:ModificationDate>1157595116</a:ModificationDate>
<a:Rect>((17565,36924), (30511,38223))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o53"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o38">
<a:CreationDate>1157595131</a:CreationDate>
<a:ModificationDate>1157595133</a:ModificationDate>
<a:Rect>((34254,36699), (46300,37998))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o54"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o34">
<a:CreationDate>1157595145</a:CreationDate>
<a:ModificationDate>1157595148</a:ModificationDate>
<a:Rect>((26078,27174), (37675,28473))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o55"/>
</c:Object>
</o:ProcedureSymbol>
<o:ProcedureSymbol Id="o41">
<a:CreationDate>1157595167</a:CreationDate>
<a:ModificationDate>1157595167</a:ModificationDate>
<a:Rect>((24766,17724), (37937,19023))</a:Rect>
<a:LineColor>16711680</a:LineColor>
<a:FillColor>12648447</a:FillColor>
<a:ShadowColor>12632256</a:ShadowColor>
<a:FontList>ProcStrn 0 Arial,8,N
DISPNAME 0 Arial,8,N
LABL 0 Arial,8,N</a:FontList>
<c:Object>
<o:Procedure Ref="o56"/>
</c:Object>
</o:ProcedureSymbol>
</c:Symbols>
</o:PhysicalDiagram>
</c:PhysicalDiagrams>
<c:DefaultDiagram>
<o:PhysicalDiagram Ref="o4"/>
</c:DefaultDiagram>
<c:Procedures>
<o:Shortcut Id="o57">
<a:ObjectID>9155A7B0-172A-40DC-9CF4-9545C06D1F3B</a:ObjectID>
<a:Name>ufn_convert_date_to_num</a:Name>
<a:Code>ufn_convert_date_to_num</a:Code>
<a:CreationDate>1130657189</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130657189</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetStereotype/>
<a:TargetID>8C2B1208-8115-47F3-B7C0-7105F526C935</a:TargetID>
<a:TargetClassID>D4B2DF40-0047-11D2-9952-006097355D9B</a:TargetClassID>
<a:GenerationType>0</a:GenerationType>
<a:TargetPackagePath>&lt;Model&gt;</a:TargetPackagePath>
</o:Shortcut>
<o:Procedure Id="o50">
<a:ObjectID>8875CD83-96B5-4656-98D1-5922B6BEBF23</a:ObjectID>
<a:Name>ufn_get_account_id</a:Name>
<a:Code>ufn_get_account_id</a:Code>
<a:CreationDate>1090274326</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1090274370</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves an account id based on the value of @descr</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_account_id
 *     Prototype: varchar @descr
 *        Returns: int 
 *  Description: Retrieves an account id based on the value of @descr.
 *******************************************************************************************************************************/
if exists (select 1
          from sysobjects
          where  id = object_id(&#39;ufn_get_account_id&#39;)
          and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_account_id
go



create function ufn_get_account_id (@descr varchar(40))  returns int as

begin
  declare @id int
   
     -- Notify the uset that we cannot search for a null description
  if @descr is null
    return -1
           
  select
      @id = id
  from
      gl_accounts
  where
      name = @descr
          
     --  Return null if account type is not found
  if @@error &lt;&gt; 0
     return -100
    
  return @id
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o47">
<a:ObjectID>A2CFC668-351C-47FB-AF8F-6F7C96611AEF</a:ObjectID>
<a:Name>ufn_get_account_type</a:Name>
<a:Code>ufn_get_account_type</a:Code>
<a:CreationDate>1089902137</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1112671645</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Obtains the primary key or Id of an account type based on the input value of &quot;description&quot;</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_account_type
 *     Prototype: varchar @descr
 *        Returns: int 
 *  Description: Retrieves an account type id based on the value of @descr.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_account_type&#39;) and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_account_type
go

create function ufn_get_account_type (@descr varchar(40))  returns int as
  begin
    declare @id int
 
    -- Notify the uset that we cannot search for a null description
    if @descr is null
      return -1
      
    select
        @id = id
    from
        gl_account_types
    where
        description = @descr
 
    --  Return null if account type is not found
    if @@error &lt;&gt; 0
      return -100
       
    return @id
 end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o56">
<a:ObjectID>C126B28D-1698-46A9-A85A-B81E4026A9CC</a:ObjectID>
<a:Name>ufn_get_acct_item_mast_count</a:Name>
<a:Code>UFN_GET_ACCT_ITEM_MAST_COUNT</a:Code>
<a:CreationDate>1089686504</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1181016313</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count of the number of master items  associated with a GL Account.</a:Comment>
<a:Procedure.Text>create function ufn_get_acct_item_mast_count  ( @gl_acct_id int )
   returns int
as

begin
   declare @item_count int
/*
   select 
          @item_count = count(*)
    from
           item_master
    where
           gl_account_id = @gl_acct_id
           
     if @@error &lt;&gt; 0 
        return -1
         
     if @item_count is null
         set @item_count = 0
         
     return @item_count
  */
  return 0   
end
GO</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o53">
<a:ObjectID>00EF1261-8805-4B90-98B3-088D3230E680</a:ObjectID>
<a:Name>ufn_get_acct_subsidiary_count</a:Name>
<a:Code>ufn_get_acct_subsidiary_count</a:Code>
<a:CreationDate>1089687070</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1089687133</a:ModificationDate>
<a:Modifier>Administrator</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count where GL Account ID exist in customer, creditor/vendor, and asset_details tables.</a:Comment>
<a:Procedure.Text>create function ufn_get_acct_subsidiary_count  ( @gl_acct_id int )
   returns int
as

begin
   declare @cust_count int
   declare @vend_count int
   declare @asset_detail_count int

      --  Check customer table for entries
   select 
          @cust_count = count(*)
    from
           customer
    where
           gl_account_id = @gl_acct_id
           
     if @@error &lt;&gt; 0 
        return -1

      --  Check Creditor/Vendor table for entries         
   select 
          @vend_count = count(*)
    from
           creditor
    where
           gl_account_id = @gl_acct_id
           
     if @@error &lt;&gt; 0 
        return -2

      --  Check Asset Details table for entries         
   select 
          @asset_detail_count = count(*)
    from
           asset_details
    where
           gl_account_id = @gl_acct_id
           
     if @@error &lt;&gt; 0 
        return -3

         -- Retrun the sum of the results to the caller.   
     return isNull(@cust_count, 0) + isNull(@vend_count, 0) + isNull(@asset_detail_count, 0)
     
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o54">
<a:ObjectID>C484C97D-4E3A-4A65-B07A-BAD5A42AC573</a:ObjectID>
<a:Name>ufn_get_acct_to_xact_count</a:Name>
<a:Code>ufn_get_acct_to_xact_count</a:Code>
<a:CreationDate>1089687151</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1089687282</a:ModificationDate>
<a:Modifier>Administrator</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count of the number of transactions associated with a GL Account.</a:Comment>
<a:Procedure.Text>create function ufn_get_acct_to_xact_count (@gl_acct_id int)
   returns int
as

begin
   declare @xact_count int

   select 
          @xact_count = count(*)
    from
           xact_posting
    where
           gl_account_id = @gl_acct_id
           
     if @@error &lt;&gt; 0 
        return -1
         
     if @xact_count is null
         set @xact_count = 0
         
     return @xact_count
     
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o55">
<a:ObjectID>8AC65FEB-9149-4D85-AB1B-C3420AE1DD85</a:ObjectID>
<a:Name>ufn_get_acct_usage_count</a:Name>
<a:Code>UFN_GET_ACCT_USAGE_COUNT</a:Code>
<a:CreationDate>1089687216</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1157595572</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count where GL Account ID exist throughout the system.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_acct_usage_count
 *     Prototype: int (GL Account  Id)
 *        Returns: int 
 *  Description: Retrieves and returns to the caller a count where GL Account ID exist throughout the system.
 *******************************************************************************************************************************/
if exists (select * from   sysobjects 
	      where  name = &#39;ufn_get_acct_usage_count&#39;)
	drop function ufn_get_acct_usage_count
GO

create function ufn_get_acct_usage_count  ( @gl_acct_id int )
   returns int
as

begin
   declare @xact_count int
   declare @item_count int
   declare @subsidiary_count int

      --  Get Transaction Count
   exec @xact_count = dbo.ufn_get_acct_to_xact_count @gl_acct_id
    if @@error &lt;&gt; 0 
        return -1001
        
      --  Get Item Master Count
   exec @item_count = dbo.ufn_get_acct_item_mast_count @gl_acct_id
    if @@error &lt;&gt; 0 
        return -1002

      --  Get Subsidiary Count
   exec @subsidiary_count = dbo.ufn_get_acct_subsidiary_count @gl_acct_id
    if @@error &lt;&gt; 0 
        return -1003
        
   return @xact_count + @item_count + @subsidiary_count
end

GO</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Shortcut Id="o58">
<a:ObjectID>EB45B0C8-5F6F-43BB-BF08-A5CCDB9CFC4C</a:ObjectID>
<a:Name>ufn_get_app_user_id</a:Name>
<a:Code>ufn_get_app_user_id</a:Code>
<a:CreationDate>1130657767</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130657767</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetStereotype/>
<a:TargetID>3D820923-EBA9-42B4-B775-2B7EB3924A6F</a:TargetID>
<a:TargetClassID>D4B2DF40-0047-11D2-9952-006097355D9B</a:TargetClassID>
<a:GenerationType>0</a:GenerationType>
<a:TargetPackagePath>&lt;Model&gt;</a:TargetPackagePath>
</o:Shortcut>
<o:Procedure Id="o59">
<a:ObjectID>26682285-36D6-42BD-AA7D-785D2E57FF9F</a:ObjectID>
<a:Name>ufn_get_creditor_balance</a:Name>
<a:Code>ufn_get_creditor_balance</a:Code>
<a:CreationDate>1136059780</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1136059780</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Returns creditor&#39;s balance.</a:Comment>
<a:Procedure.Text>create function ufn_get_creditor_balance (@creditor_id int) RETURNS numeric

begin
  declare @amount numeric
  select 
      @amount = isnull(sum(amount), 0) 
  from 
      creditor_activity  
  where 
      creditor_id = @creditor_id
      
  return @amount
end
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o60">
<a:ObjectID>1015D3BC-0C42-4A9A-8135-F8EEEDFF313C</a:ObjectID>
<a:Name>ufn_get_creditor_usage_count</a:Name>
<a:Code>ufn_get_creditor_usage_count</a:Code>
<a:CreationDate>1090452655</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1090452703</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count where Creditor exist throughout the system.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_creditor_usage_count
 *        Returns: int 
 *  Description: Retrieves and returns to the caller a count where Creditor exist throughout the system.
 *******************************************************************************************************************************/
if exists (select * from   sysobjects 
	      where  name = &#39;ufn_get_creditor_usage_count&#39;)
	drop function ufn_get_creditor_usage_count
GO

create function ufn_get_creditor_usage_count  ( @id int )
   returns int
as

begin
   declare @im_count int
   declare @cred_actv_count int

      --  Get Item Master count
   select
           @im_count = isNull(count(*),0)
    from
            item_master
    where vendor_id = @id
    
    if @@error &lt;&gt; 0 
        return -1001
    
    
       -- Get Creditor Activity Count
   select
	            @cred_actv_count = isNull(count(*),0)
	     from
	             creditor_activity
	     where creditor_id = @id
	     
	     if @@error &lt;&gt; 0 
        return -1002
        
   return @im_count  + @cred_actv_count
   
end

GO</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o61">
<a:ObjectID>F42B7DB5-7C9E-4F9D-B11B-E08739C4D4DC</a:ObjectID>
<a:Name>ufn_get_current_item_status</a:Name>
<a:Code>ufn_get_current_item_status</a:Code>
<a:CreationDate>1089993932</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1150327482</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the current item status id of an item</a:Comment>
<a:Procedure.Text>if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_current_item_status&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_current_item_status
go

create function ufn_get_current_item_status (@item_master_id int)  returns int as

		begin
          declare @id int
          declare @result int
          
          select
                   @id = item_status_id
           from
                    item_master_status_hist
           where
                    item_master_id = @item_master_id
           and end_date is null
           
           set @result = @@rowcount
           if @result &gt; 1
              return -200
           
                --  Return null if account type is not found
           if @result = 0
               return -100
               
           return @id
		end
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o62">
<a:ObjectID>B145BB4E-3C17-4E4A-ACA9-9D7C18674C1F</a:ObjectID>
<a:Name>ufn_get_current_item_status_id</a:Name>
<a:Code>ufn_get_current_item_status_id</a:Code>
<a:CreationDate>1089993932</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1150327484</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the primary key of the current status history of an item</a:Comment>
<a:Procedure.Text>if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_current_item_status&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_current_item_status
go

create function ufn_get_current_item_status (@item_master_id int)  returns int as

		begin
          declare @id int
          declare @result int
          
          select
                   @id = id
           from
                    item_master_status_hist
           where
                    item_master_id = @item_master_id
           and end_date is null
           
           set @result = @@rowcount
           if @result &gt; 1
              return -200
           
                --  Return null if account type is not found
           if @result = 0
               return -100
               
           return @id
		end
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o63">
<a:ObjectID>FCDD84D4-AC49-4F29-B3D1-ED25968B9E32</a:ObjectID>
<a:Name>ufn_get_current_so_status</a:Name>
<a:Code>ufn_get_current_so_status</a:Code>
<a:CreationDate>1094485767</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1094485767</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the sales order status of a sales order.   Otherwise, a negative value is returned.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_current_so_status
 *     Prototype: int @so_id
 *        Returns: int 
 *  Description: Retrieves the sales order status of a sales order.   Otherwise, a negative value is returned.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_current_so_status&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_current_so_status 
go

create function ufn_get_current_so_status (@so_id int)  returns int as

		begin
          declare @so_stat_id int
          declare @result int
          
          select
                 @so_stat_id = sales_order_status_id
           from
                  sales_order_status_hist
           where
                  sales_order_id = @so_id
           and end_date is null
           
           set @result = @@rowcount
           if @result &gt; 1
              return -200
           
                --  Return null if history is not found
           if @result = 0
               return -100
               
           return @so_stat_id
		end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o64">
<a:ObjectID>F340A32E-243E-4F8C-841B-A23D70314BFF</a:ObjectID>
<a:Name>ufn_get_current_so_status_description</a:Name>
<a:Code>ufn_get_current_so_status_description</a:Code>
<a:CreationDate>1139016882</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1139016882</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the sales order status desccription of a sales order.   Ottherwise, null is returned.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_current_so_status_description
 *     Prototype: int @so_id
 *        Returns: varchar
 *  Description: Retrieves the sales order status desccription of a sales order.   Ottherwise, null is returned.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_current_so_status_description&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_current_so_status_description 
go

create function ufn_get_current_so_status_description (@so_id int)  returns varchar(30) as

		begin
          declare @so_stat_descr varchar(30)
          declare @result int
          
          select
                 @so_stat_descr = sos.description
           from
                  sales_order_status_hist sosh,
                  sales_order_status sos
           where
                  sosh.sales_order_id = @so_id
           and sosh.sales_order_status_id = sos.id
           and sosh.end_date is null
           
           set @result = @@rowcount
           
           --  Return null if history is not found
           if @result = 0
               return null
               
           return @so_stat_descr
		end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o65">
<a:ObjectID>1157C6BB-7BF2-43AE-A5B6-BFE24F3E11E4</a:ObjectID>
<a:Name>ufn_get_current_so_status_id</a:Name>
<a:Code>ufn_get_current_so_status_id</a:Code>
<a:CreationDate>1094485825</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1094485825</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the primary key of the sales order status history entry in the sales_order_status_hist table regarding a sales order.   Otherwise,  a negative value is returned.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_current_so_status_id
 *     Prototype: int @so_id
 *        Returns: int 
 *  Description: Retrieves the primary key of the sales order status history entry in the sales_order_status_hist table regarding a sales order.   Otherwise, 
 *                    a negative value is returned.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_current_so_status_id&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_current_so_status_id 
go

create function ufn_get_current_so_status_id (@so_id int)  returns int as

		begin
          declare @id int
          declare @result int
          
          select
                 @id = id
           from
                  sales_order_status_hist
           where
                  sales_order_id = @so_id
           and end_date is null
           
           set @result = @@rowcount
           if @result &gt; 1
              return -200
           
                --  Return null if history is not found
           if @result = 0
               return -100
               
           return @id
		end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o66">
<a:ObjectID>A4310C09-193E-4F9F-812F-FCC8488EFFB2</a:ObjectID>
<a:Name>ufn_get_cust_usage_count</a:Name>
<a:Code>ufn_get_cust_usage_count</a:Code>
<a:CreationDate>1090451114</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130653684</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count where Cusomter exist throughout the system.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_cust_usage_count
 *        Returns: int 
 *  Description: Retrieves and returns to the caller a count where Cusomter exist throughout the system.
 *******************************************************************************************************************************/
if exists (select * from   sysobjects 
	      where  name = &#39;ufn_get_cust_usage_count&#39;)
	drop function ufn_get_cust_usage_count
GO

create function ufn_get_cust_usage_count  ( @id int )
   returns int
as

begin
   declare @so_count int
   declare @cust_actv_count int

      --  Get Sales order count
   select
           @so_count = isNull(count(*),0)
    from
            sales_order
    where customer_id = @id
    
    if @@error &lt;&gt; 0 
        return -1001
    
    
       -- Get Customer Activity Count
   select
         @cust_actv_count = isNull(count(*),0)
   from
         customer_activity
   where 
         customer_id = @id
	     
   if @@error &lt;&gt; 0 
      return -1002
        
   return @so_count  + @cust_actv_count
   
end

GO</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o67">
<a:ObjectID>3958330A-DA5C-4064-B57F-4699BFDFD56B</a:ObjectID>
<a:Name>ufn_get_customer_balance</a:Name>
<a:Code>UFN_GET_CUSTOMER_BALANCE</a:Code>
<a:CreationDate>1136070467</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1181016495</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Returns customer&#39;s balance</a:Comment>
<a:Procedure.Text>create function ufn_get_customer_balance (@customer_id int) returns numeric
as
begin
 declare @amount numeric
  select 
      @amount = isnull(sum(amount), 0) 
  from 
      customer_activity  
  where 
      customer_id = @customer_id
      
  return @amount      
end


</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o68">
<a:ObjectID>F9F97BB4-D561-4515-BF75-E2C7AEF2533E</a:ObjectID>
<a:Name>ufn_get_customer_name</a:Name>
<a:Code>ufn_get_customer_name</a:Code>
<a:CreationDate>1115110392</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1115111905</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Obtains the customer&#39;s name based on either the person id or the business id.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_customer_name
 *     Prototype: int person_id, int business_id
 *        Returns: varchar 
 *  Description: Retrieves the name of the customer based on either person id or business id.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_customer_name&#39;) and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_customer_name
go

create function ufn_get_customer_name (@per_id int, @bus_id int) returns varchar(40) as

begin
  declare @cust_name varchar(40)
   
   
  if @per_id is null and @bus_id is null
     return null
     
  -- Notify the user that personal id and business id are mutually exclusive
  if @per_id &gt; 0 and @bus_id &gt; 0
    return &#39;[Business/Person Conflict]&#39;
           
  -- Try to get person name
  if @per_id &gt; 0
    begin
     select
         @cust_name = shortname
      from
          person
      where
          id = @per_id
          
     --  Return null if personal contact information is not found
     if @@rowcount &lt;= 0
        return &#39;[Person N/A]&#39;
   end
  
  -- Try to get business name
  if @bus_id &gt; 0
    begin
     select
         @cust_name = longname
      from
          business
      where
          id = @bus_id
          
     --  Return null if business contact information is not found
     if @@rowcount &lt;= 0
        return &#39;[Business N/A]&#39;
   end     
      
  return @cust_name
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Shortcut Id="o69">
<a:ObjectID>8113BCA8-3DA8-47F3-8B62-C0DA97E31A74</a:ObjectID>
<a:Name>ufn_get_datepart</a:Name>
<a:Code>ufn_get_datepart</a:Code>
<a:CreationDate>1130654611</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130654611</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetStereotype/>
<a:TargetID>894D28C1-804D-4D1B-8BCA-363CCD033803</a:TargetID>
<a:TargetClassID>D4B2DF40-0047-11D2-9952-006097355D9B</a:TargetClassID>
<a:GenerationType>0</a:GenerationType>
<a:TargetPackagePath>&lt;Model&gt;</a:TargetPackagePath>
</o:Shortcut>
<o:Procedure Id="o70">
<a:ObjectID>B7D6BCEF-84E7-4949-BF3C-A9F578E2A143</a:ObjectID>
<a:Name>ufn_get_item_status_id</a:Name>
<a:Code>ufn_get_item_status_id</a:Code>
<a:CreationDate>1089993843</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1089993907</a:ModificationDate>
<a:Modifier>Administrator</a:Modifier>
<a:Comment>Retrieves the item status id from the item_master_status_hist table that corresponds to @descr.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_item_status_id
 *     Prototype: varchar @descr
 *        Returns: int 
 *  Description: Retrieves the item status id from the item_master_status_hist table that corresponds to @descr.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_item_status_id&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_item_status_id
go

create function ufn_get_item_status_id (@descr varchar(40))  returns int as

		begin
          declare @id int
          
              -- Notify the user that we cannot search for a null description
          if @descr is null
              return -1
              
          select
                   @id = id
           from
                   item_master_status
           where
                   description = @descr
           
                --  Return null if account type is not found
           if @@error &lt;&gt; 0
               return -100
               
           return @id
		end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o71">
<a:ObjectID>37AE518C-B571-459C-B568-EC654E96A0F3</a:ObjectID>
<a:Name>ufn_get_item_usage_count</a:Name>
<a:Code>ufn_get_item_usage_count</a:Code>
<a:CreationDate>1090442132</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1090442161</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves and returns to the caller a count where Item Master exist throughout the system.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_item_usage_count
 *        Returns: int 
 *  Description: Retrieves and returns to the caller a count where Item Master exist throughout the system.
 *******************************************************************************************************************************/
if exists (select * from   sysobjects 
	      where  name = &#39;ufn_get_item_usage_count&#39;)
	drop function ufn_get_item_usage_count
GO

create function ufn_get_item_usage_count  ( @id int )
   returns int
as

begin
   declare @item_count int

      --  Get Sales order count
   select
           @item_count = isNull(count(*),0)
    from
            sales_order_items
    where item_master_id = @id
    
    if @@error &lt;&gt; 0 
        return -1001
    
        
   return @item_count 
end

GO</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o72">
<a:ObjectID>A701F7CD-E556-45A7-9187-448939203D71</a:ObjectID>
<a:Name>ufn_get_sales_order_item_total</a:Name>
<a:Code>ufn_get_sales_order_item_total</a:Code>
<a:CreationDate>1139172243</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1140580158</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the total sales order item amount (order quantity * unit cost).</a:Comment>
<a:Procedure.Text>create function ufn_get_sales_order_item_total (@sales_order_id int)
RETURNS numeric(11,2)

begin

    declare @item_amount numeric (11, 2)

    select 
          @item_amount = sum( isnull(soi.order_qty, 0) * (isnull(im.unit_cost, 0) * isnull(im.markup, 0)) ) 
    from 
          sales_order_items soi, 
          item_master im
    where 
          soi.item_master_id = im.id
      and soi.sales_order_id = @sales_order_id
  
    return @item_amount 
  
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o73">
<a:ObjectID>9E2CCB45-0A41-4923-887F-138D53F9A479</a:ObjectID>
<a:Name>ufn_get_so_status_id</a:Name>
<a:Code>ufn_get_so_status_id</a:Code>
<a:CreationDate>1094485881</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1094485881</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the sales order status id from the sales_order_status  table that corresponds to @descr.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_so_status_id
 *     Prototype: varchar @descr
 *        Returns: int 
 *  Description: Retrieves the sales order status id from the sales_order_status  table that corresponds to @descr.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_so_status_id&#39;)  and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_so_status_id
go

create function ufn_get_so_status_id (@descr varchar(40))  returns int as

		begin
          declare @id int
          
              -- Notify the user that we cannot search for a null description
          if @descr is null
              return -1
              
          select
                   @id = id
           from
                   sales_order_status
           where
                   description = @descr
           
                --  Return null if account type is not found
           if @@error &lt;&gt; 0
               return -100
               
           return @id
		end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o74">
<a:ObjectID>4EB52BEE-B321-493E-ACCE-38570AAE911B</a:ObjectID>
<a:Name>ufn_get_xact_type_id</a:Name>
<a:Code>ufn_get_xact_type_id</a:Code>
<a:CreationDate>1091288338</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1091767378</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves transaction type id based on the value of @descr.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: ufn_get_xact_type_id
 *     Prototype: varchar @descr
 *        Returns: int 
 *  Description: Retrieves transaction type id based on the value of @descr.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects where  id = object_id(&#39;ufn_get_xact_type_id&#39;) and type in (&#39;IF&#39;, &#39;FN&#39;, &#39;TF&#39;))
   drop function ufn_get_xact_type_id
go



create function ufn_get_xact_type_id (@descr varchar(40))  returns int as

begin
  declare @id int
   
     -- Notify the user that we cannot search for a null description
  if @descr is null
    return -1
           
  select
      @id = id
  from
      xact_type
  where
      description = @descr
          
     --  Return null if transation type is not found
  if @@rowcount &lt;= 0
     return -100
    
  return @id
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o44">
<a:ObjectID>10E0907B-8476-4F6B-A85F-6E103AF77EB5</a:ObjectID>
<a:Name>usp_add_acct</a:Name>
<a:Code>USP_ADD_ACCT</a:Code>
<a:CreationDate>1089684536</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1157595259</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the gl_accounts table.    Returns value of the primary key via @id output parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_acct
 *  Descrsiption: Inserts a row into the gl_accounts table.    Returns value of the primary key via @id output parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects
         WHERE name = &#39;usp_add_acct&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_acct
GO

create procedure usp_add_acct @id int output,
                               @acct_type_id int,
                               @acct_catg_id int,
                               @acct_seq int output,
                               @acct_no varchar(20) output,
                               @name varchar(100),
                               @descr varchar(255) as
  begin
       declare @exist_cnt int

           --  Verify that the GL Account Category exist.
       select
	            @exist_cnt = count(*)
	     from
	             gl_account_category
	     where
	             id = @acct_catg_id
	     and acct_type_id = @acct_type_id

            --  Raise error if GL Account Category is not found.
        if @exist_cnt is null or @exist_cnt &lt;= 0
            raiserror(50002, 18, 1, @acct_catg_id, @acct_type_id)

             --  Begin to build GL Account.
      exec usp_get_next_acct_seq @acct_type_id, @acct_catg_id, @acct_seq output
      exec usp_build_account_no @acct_type_id, @acct_catg_id, @acct_seq, @acct_no output

      insert into GL_ACCOUNTS
					(acct_type_id,
					 acct_cat_id,
					 acct_seq,
					 acct_no,
					 name,
                     description,
					 date_created,
					 date_updated,
					 user_id)
				values
					(@acct_type_id,
					 @acct_catg_id,
					 @acct_seq,
					 @acct_no,
					 @name,
                     @descr,
					 getdate(),
					 getdate(),
					 user)

    if @@error &lt;&gt; 0
          raiserror(50001, 18, 1)

    set @id = @@identity
  end
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o75">
<a:ObjectID>1E1D26D2-2EF0-4DE3-821A-C8D210C236D3</a:ObjectID>
<a:Name>usp_add_acct_catg_type</a:Name>
<a:Code>usp_add_acct_catg_type</a:Code>
<a:CreationDate>1089684536</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1095849174</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the gl_account_category table.    Returns value of the primary key via @id output  parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_acct_catg_type
 *   Prototype: id int output
 *                      acct_type_id  int
 *                      desc varchar(50)
 *      Returns: none
 *  Descrsiption: Inserts a row into the gl_account_category table.    Returns value of the primary key via @id output
 *                         parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_add_acct_catg_type&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_acct_catg_type
GO

create procedure usp_add_acct_catg_type @id int output, 
																																							@acct_type_id int, 
																																							@desc varchar(50) as
  begin
      declare @exist_cnt int
      declare @max_id int
      
            -- Verify that the account type id exist
     select
             @exist_cnt = count(*)
     from
              gl_account_types
     where 
              id = @acct_type_id
              
         --  Raise error if account type does not exist.
     if @exist_cnt &lt;= 0
         raiserror(50003, 18, 1, @acct_type_id)
         
     -- ****************************************************************************************************************************************
     -- *  Calculate the value of this primary key which will represent the category sequence of the associated account type id.
     -- *  The formula is basically,  (acct_type_id * 100).
     -- *   Example:  If the acct_type_id = 1, then its corresponding category id&#39;s (id) will be 100, 101, 102, 103, and so on.
     -- ****************************************************************************************************************************************
     select
             @max_id = max(id)
     from
             gl_account_category
     where
             acct_type_id = @acct_type_id
             
     if @max_id is null or @max_id &lt;= 0
              --  Make first category id a product of (acct_type_id and 100) + 1 such as: 101, 201, 301, 401, and 501
         set @max_id = (@acct_type_id * 100) + 1
     else
              --  increment category by 1
          set @max_id = @max_id + 1
         
            --  Update the database with the new account category.    
      insert into GL_ACCOUNT_CATEGORY
					( id,
					  acct_type_id, 
					 description, 
					 date_created, 
					 date_updated, 
					 user_id)
				values 
					(@max_id,
					 @acct_type_id,
					 @desc,
					 getdate(),
					 getdate(),
					 user)
       
     set @id = @max_id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o48">
<a:ObjectID>0E4DE7C4-5E6B-42C7-B244-CBA2578DBC53</a:ObjectID>
<a:Name>usp_add_creditor</a:Name>
<a:Code>USP_ADD_CREDITOR</a:Code>
<a:CreationDate>1089685160</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1157595475</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the creditor table.    Returns value of the primary key via @id output  parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_creditor
 *      Returns: none
 *  Descrsiption: Inserts a row into the creditor table.    Returns value of the primary key via @id output  parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_add_creditor&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_creditor
GO

create procedure usp_add_creditor @id int output, 
                                 @gl_account_id int, 
                                 @business_id int, 
                                 @creditor_type_id int,
                                 @account_number varchar(25) output,
                                 @credit_limit numeric(15, 2),
                                 @apr numeric (6, 4) as
  begin
      declare @gl_acct_type int
      declare @exist_cnt int
      declare @LIABILITY_ACCT_TYPE int
      declare @cur_date  datetime
      declare @cur_mm varchar(3)
      declare @cur_dy varchar(3)
      declare @cur_yr varchar(4)
      
      
         --  Get Account Type for liabilities
    select @LIABILITY_ACCT_TYPE = dbo.ufn_get_account_type(&#39;liabilities&#39;)
    
          -- Ensure that GL Account Id is valid  
     if @gl_account_id is null or @gl_account_id &lt;= 0 
        -- Try to retrieve gl account id
        select @gl_account_id = dbo.ufn_get_account_id(&#39;Accounts Payable&#39;)
        if @gl_account_id is null or @gl_account_id &lt;= 0 
           -- error if gl account id is not obtainable
           raiserror(50004, 18, 1)
        
     select 
             @gl_acct_type = acct_type_id
     from
              gl_accounts
     where 
              id = @gl_account_id
          
          --  Raise error if GL Account is not found.
      if @@rowcount &lt;= 0
          raiserror(50005, 18, 1, @gl_account_id)

          --  Verify that GL Account type is a Liability
      if @gl_acct_type &lt;&gt; @LIABILITY_ACCT_TYPE
          raiserror(50006, 18, 1)

           -- Validate Business ID
      if @business_id is null or @business_id &lt;= 0 
          raiserror(50007, 18, 1)
          
             -- Verify that the business exist
      select
              @exist_cnt  = count(*)
       from
               business
       where 
               id = @business_id
          
          --  Raise error if Business is not found.
      if @exist_cnt &lt;= 0
          raiserror(50008, 18, 1, @business_id)

           --  Validate Creditor Type Id
      if @creditor_type_id is null or @creditor_type_id &lt;= 0
         raiserror(50009, 18, 1)
         
      -- Verify that Creditor Type exists
      select
               @exist_cnt = count(*)
       from
                creditor_type
       where 
                id = @creditor_type_id
                
       if @exist_cnt &lt;= 0
           raiserror(50010, 18, 1)
      
      --  Build creditor&#39;s account number
      set @cur_date = getdate()
      set @cur_mm = cast(month(@cur_date) as varchar)
      set @cur_dy = cast(day(@cur_date) as varchar)
      set @cur_yr = cast(year(@cur_date) as varchar)
      if len(@cur_mm) = 1
          set @cur_mm = &#39;0&#39; + @cur_mm
      if len(@cur_dy) = 1
          set @cur_dy = &#39;0&#39; + @cur_dy
          
      set @account_number = cast(@business_id as varchar) + &#39;-&#39; + @cur_mm + @cur_dy + @cur_yr
      
           --  Add creditior to the database
      insert into CREDITOR
	   (gl_account_id,
        business_id, 
        creditor_type_id,
        account_number,
        credit_limit,
        apr, 
        active,
	    date_created, 
	    date_updated, 
	    user_id)
	  values 
	   (@gl_account_id,
        @business_id, 
        @creditor_type_id,
        @account_number,
        isNull(@credit_limit, 0),
        isNull(@apr, 0),
        1,
	    getdate(),
		getdate(),
		user)

    set @id = @@identity
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o76">
<a:ObjectID>1B6A0A9C-C2C1-4A94-B259-6BFB25792503</a:ObjectID>
<a:Name>usp_add_creditor_activity</a:Name>
<a:Code>usp_add_creditor_activity</a:Code>
<a:CreationDate>1144264636</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1144450529</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Creates creditor transaction activity which reflects accounts payables.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_customer_activity
 *  Descrsiption: Creates creditor transaction activity which reflects accounts payable.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_add_creditor_activity&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_creditor_activity
GO

create procedure usp_add_creditor_activity @confirm_no varchar(20) output, 
                                           @creditor_id int,
                                           @xact_id int, 
                                           @xact_amt numeric(15,2)  as
  begin
       declare @xact_date datetime
       declare @xact_cash_pay int
       declare @xact_acct_sales int
       declare @xact_type_id int
       declare @xact_reverse int
       declare @xact_purchase int
       declare @msg varchar(1000)
       
       set @xact_date = dbo.ufn_get_datepart(getdate())
       
       set @xact_reverse = 999;
       set @xact_purchase = 130;
       --set @xact_amt = abs(@xact_amt)
       
       -- Get cash payment transaction code
       select
             @xact_cash_pay = id
         from
             xact_type
        where
             xact_code = &#39;cashpaylib&#39;
            
            
       -- Verify that transaction is valid by attempting 
       -- to obtain its transaction type id
       select
             @xact_type_id = xact_type_id
         from
             xact
        where
             id = @xact_id
            
        set @msg = &#39;Preparing to create creditor activity entry. Transaction Type for trasaction &#39; + cast(@xact_id as varchar) + &#39; is &#39; + cast(@xact_type_id as varchar) + &#39;.  &#39;
        
     
        --  Raise error if Transaction does not exist.
        if @xact_type_id is null or @xact_type_id &lt;= 0 
            raiserror(50038, 18, 1, @xact_id)
  /*
        -- By default treat amount as if it is a reversal or a payment towards the account. 
        if @xact_type_id = @xact_reverse or @xact_type_id = @xact_cash_pay
          begin
            set @xact_amt = @xact_amt * -1
            set @msg = @msg + &#39;Creditor activity is found to be a reversal or payment.  &#39; 
          end

        -- If activity is purchase of inventory, ensure that the amount is always positive.
        if @xact_type_id = @xact_purchase
          begin
            set @msg = @msg + &#39;Creditor activity is found to be a purchase.  &#39; 
            set @xact_amt = abs(@xact_amt)
          end
    */        
            
       set @msg = @msg + &#39;Activity amount to be posted: &#39;  + cast(@xact_amt as varchar)
       
       -- Record creditor activity
       insert into CREDITOR_ACTIVITY
			(creditor_id, 
             xact_id,
			 amount,
			 date_created, 
			 date_updated, 
			 user_id)
		values 
			(@creditor_id,
			 @xact_id,
			 @xact_amt,
			 getdate(),
			 getdate(),
			 user)

        if @@error &lt;&gt; 0
           set @confirm_no = &#39;-1&#39;
           
        if @xact_type_id &lt;&gt; @xact_cash_pay and @xact_type_id &lt;&gt; @xact_reverse
           set @confirm_no = &#39;&#39;
          
        -- Assign confirmation number to transaction
        update xact set
             confirm_no = @confirm_no
        where 
             id = @xact_id 
          
        exec usp_log_message @msg, 1                       
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o49">
<a:ObjectID>2129D153-1554-4D6A-913E-1374BB956A7C</a:ObjectID>
<a:Name>usp_add_customer</a:Name>
<a:Code>USP_ADD_CUSTOMER</a:Code>
<a:CreationDate>1090278480</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595497</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the customer table.    Returns value of the primary key via @id output  parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_customer
 *      Returns: none
 *  Descrsiption: Inserts a row into the customer table.    Returns value of the primary key via @id output  parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects
         WHERE name = &#39;usp_add_customer&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_customer
GO

create procedure usp_add_customer @id int output,
                                 @gl_account_id int,
                                 @person_id int,
                                 @business_id int,
                                 @credit_limit numeric(15, 2),
                                 @acct_no varchar(30) as
  begin
      declare @gl_acct_type int
      declare @exist_cnt int
      declare @ASSET_ACCT_TYPE int
      declare @ACCT_RECV_ID int
      declare @user_id  varchar(25)  
      declare @customer_type_uid int  
      declare @cur_date  datetime
      declare @cur_mm varchar(3)
      declare @cur_dy varchar(3)
      declare @cur_yr varchar(4)  
      
      set @user_id = dbo.ufn_get_app_user_id()

    if @person_id &lt;= 0
       set @person_id = null
    if @business_id &lt;= 0
       set @business_id = null

         --  Get Account Type for Assets
    select @ASSET_ACCT_TYPE = dbo.ufn_get_account_type(&#39;assets&#39;)
    select @ACCT_RECV_ID = dbo.ufn_get_account_id(&#39;accounts receivable&#39;)

          -- Ensure that GL Account Id is valid
--     if @gl_account_id is null or @gl_account_id &lt;= 0
--        raiserror(50004, 18, 1)

          --  Verify that gl_account_id is of Accounts Receivable
--     if @ACCT_RECV_ID &lt;&gt; @gl_account_id
--         raiserror(50012, 18, 1, &#39;Accounts Receivables&#39;, @ACCT_RECV_ID, @gl_account_id)

      if @person_id is null and @business_id is null
         raiserror(50013, 18, 1)
         
      if @person_id is not null and @business_id is not null
         raiserror(50061, 18, 1)
      
           --  Validate Person Id
      if @person_id is not null
         begin
    		select
    			@exist_cnt = count(*)
    		from
    		    person
    		where
    			id = @person_id

    		--  Raise error if Person is not found.
    		if @exist_cnt &lt;= 0
    		  raiserror(50014, 18, 1, @person_id)
    	 end

		           -- Validate Business Id
      if @business_id is not null
          begin
			select
				@exist_cnt  = count(*)
        	from
			    business
			where
			    id = @business_id

			--  Raise error if Business is not found.
			if @exist_cnt &lt;= 0
			  raiserror(50015, 18, 1, @business_id)
		  end
          
          
      --  Build customer&#39;s account number.  Account number will contain either 
      --  the business_id or person_id whichever is greater that zero.
      set @cur_date = getdate()
      set @cur_mm = cast(month(@cur_date) as varchar)
      set @cur_dy = cast(day(@cur_date) as varchar)
      set @cur_yr = cast(year(@cur_date) as varchar)
      if len(@cur_mm) = 1
          set @cur_mm = &#39;0&#39; + @cur_mm
      if len(@cur_dy) = 1
          set @cur_dy = &#39;0&#39; + @cur_dy
          
      if @business_id &gt; 0
         set @customer_type_uid = @business_id
      if @person_id &gt; 0
         set @customer_type_uid = @person_id
         
      set @acct_no = cast(@customer_type_uid as varchar) + &#39;-&#39; + @cur_mm + @cur_dy + @cur_yr          

      --  Add customer to the database
      insert into CUSTOMER
		(gl_account_id,
         account_no,
         person_id,
         business_id,
         credit_limit,
         active,
	     date_created,
		 date_updated,
		 user_id)
	  values
		(@ACCT_RECV_ID,
         @acct_no,
         @person_id,
         @business_id,
         isNull(@credit_limit, 0),
         1,
		 getdate(),
		 getdate(),
		 @user_id)

    set @id = @@identity
  end
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o77">
<a:ObjectID>C0BB1DB8-DD8E-4E68-8AFB-242584BDA1ED</a:ObjectID>
<a:Name>usp_add_customer_activity</a:Name>
<a:Code>usp_add_customer_activity</a:Code>
<a:CreationDate>1141275466</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1141312225</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Creates customer transaction activity which reflects accounts receivable.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_customer_activity
 *  Descrsiption: Creates customer transaction activity which reflects accounts receivable.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_add_customer_activity&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_customer_activity
GO

create procedure usp_add_customer_activity @confirm_no varchar(20) output, 
                                           @customer_id int,
                                           @xact_id int, 
                                           @xact_amt numeric(15,2)  as
  begin
       declare @xact_date datetime
       declare @xact_cash_pay int
       declare @xact_acct_sales int
       declare @xact_type_id int
       
       set @xact_date = dbo.ufn_get_datepart(getdate())
       
       -- Get cash payment transaction code
       select
             @xact_cash_pay = id
         from
             xact_type
        where
             xact_code = &#39;cashsale&#39;
            
            
       -- Verify that transaction is valid by attempting 
       -- to obtain its transaction type id
       select
             @xact_type_id = xact_type_id
         from
             xact
        where
             id = @xact_id
            
     
        --  Raise error if Transaction does not exist.
        if @xact_type_id is null or @xact_type_id &lt;= 0 
            raiserror(50038, 18, 1, @xact_id)
  
        -- Determine if activity is an account sale or a cash payment.
        if @xact_type_id = @xact_cash_pay
          begin
            set @xact_amt = @xact_amt * -1
          end

        if @xact_type_id = @xact_acct_sales
          begin
            set @xact_amt = abs(@xact_amt)
          end
            
            
            
           -- Record cusomer activity
       insert into CUSTOMER_ACTIVITY
			(customer_id, 
             xact_id,
			 amount,
			 date_created, 
			 date_updated, 
			 user_id)
		values 
			(@customer_id,
			 @xact_id,
			 @xact_amt,
			 getdate(),
			 getdate(),
			 user)

        if @@error &lt;&gt; 0
           set @confirm_no = &#39;-1&#39;
           
        if @xact_type_id &lt;&gt; @xact_cash_pay and @xact_type_id &lt;&gt; @xact_acct_sales
           set @confirm_no = &#39;&#39;
          
        -- Assign confirmation number to transaction
        update xact set
             confirm_no = @confirm_no
        where 
             id = @xact_id 
          
                   
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o46">
<a:ObjectID>55441597-F2F5-4D8A-B71B-60BDE6B1DC4E</a:ObjectID>
<a:Name>usp_add_item_master</a:Name>
<a:Code>USP_ADD_ITEM_MASTER</a:Code>
<a:CreationDate>1089992576</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1157595302</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the item master  table.    Returns the following values to the caller via output parameter:   item master primary key as @id,  gl account id as @gl_account_id,  retail price as @retail_price, and active as @active</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_item_master
 *      Returns: none
 *  Descrsiption: Inserts a row into the item master  table.    Returns the following values to the caller via output
 *                           parameter:   item master primary key as @id,  gl account id as @gl_account_id,
 *                           retail price as @retail_price, and active as @active
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects
         WHERE name = &#39;usp_add_item_master&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_item_master
GO

create procedure usp_add_item_master @id int output,
                                     @vendor_id int,
                                     @item_type_id int,
									 @vendor_item_descr varchar(80),
									 @vendor_item_no varchar(25),
									 @item_serial_no varchar(25),
									 @qty_on_hand int,
									 @unit_cost numeric(15,2),
									 @markup numeric(5,2),
									 @retail_price numeric (15, 2) output,
                                     @override_retail bit,
									 @active bit output
as

  begin
      declare @exist_cnt int
      declare @ITEM_STATUS_ID int
      declare @acct_seq int
      declare @acct_no varchar(25)


      -- ********************************************************************************
      -- * Validate Vendor. If @vendor_id is not null Validate Item Master Details 
      -- * against database. This procedure assumes the Vendor Id has been verified to be 
      -- * a valid numeric value at this point.
      -- ********************************************************************************
      if @vendor_id &gt; 0
        begin
          -- Verify vendor exists
          select
               @exist_cnt  = count(*)
           from
               creditor
           where
               id = @vendor_id

              --  Raise error if Vendor is not found.
          if @exist_cnt is null or @exist_cnt &lt;= 0
              raiserror(50016, 18, 1, @vendor_id)
        end
      else
         begin
           set @vendor_id = null
         end

      set @active = 1

      --  Update database with new Item.
      insert into ITEM_MASTER
	   (vendor_id,
        item_type_id,
        description,
        vendor_item_no,
        item_serial_no,
        qty_on_hand,
        unit_cost,
        markup,
        retail_price,
        override_retail,
        active,
	    date_created,
		date_updated,
		user_id)
	  values
	    (@vendor_id,
         @item_type_id,
		 @vendor_item_descr,
		 @vendor_item_no,
		 @item_serial_no,
		 @qty_on_hand,
         @unit_cost,
         @markup,
		 @retail_price,
         @override_retail,
		 @active,
 	     getdate(),
	     getdate(),
	     user)

    set @id = @@identity

    if @id is null or @id &lt;= 0
       raiserror(50017, 18, 1, @vendor_id, @vendor_item_descr, @vendor_item_no, @item_serial_no)

    --   Place Item in &quot;Available&quot; if quantity is greater than zero.   Otherwise, &#39;Out of Stock&#39;.
    if @qty_on_hand &lt;= 0
       select @ITEM_STATUS_ID = dbo.ufn_get_item_status_id(&#39;Out of Stock&#39;)
    else
       select @ITEM_STATUS_ID = dbo.ufn_get_item_status_id(&#39;Available&#39;)
       
    insert into ITEM_MASTER_STATUS_HIST
	   (item_master_id,
	    item_status_id,
		unit_cost,
		markup,
		effective_date,
		end_date,
		date_created,
		user_id)
    values
       (@id,
        @ITEM_STATUS_ID,
        @unit_cost,
        @markup,
        getdate(),
        null,
        getdate(),
        user)
  end
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o51">
<a:ObjectID>AAEC2E8E-AE32-433E-93C8-4AE2BB28DC1F</a:ObjectID>
<a:Name>usp_add_sales_order</a:Name>
<a:Code>USP_ADD_SALES_ORDER</a:Code>
<a:CreationDate>1094485932</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595528</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Creates a new sales order.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_sales_order
 *  Descrsiption: Creates a new sales order.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_add_sales_order&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_sales_order
GO

create procedure usp_add_sales_order @id int output, 
                                     @customer_id int  as
  begin
    declare @exist_cnt int
    declare @QUOTE varchar(8)
   
    set @QUOTE = &#39;Quote&#39;
   
    --  Verify that Customer exists
    select
        @exist_cnt = count(*)
    from
        customer
    where
        id = @customer_id

    if @exist_cnt &lt;= 0 
       raiserror(50018, 18, 1, @customer_id)

    insert into 
        SALES_ORDER
			(customer_id,
			 date_created, 
			 date_updated, 
			 user_id)
		values 
			(@customer_id,
			 getdate(),
			 getdate(),
			 user)

    set @id = @@identity

    --  Update sales order status to &#39;Qoute&#39;    
    exec usp_chg_so_status @id, @QUOTE

  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o78">
<a:ObjectID>54B9D3C1-92FC-48FC-99BB-D21E9700553D</a:ObjectID>
<a:Name>usp_add_sales_order_item</a:Name>
<a:Code>usp_add_sales_order_item</a:Code>
<a:CreationDate>1094485972</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130654446</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Creates a new sales order item..</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_sales_order_item
 *  Descrsiption: Creates a new sales order item..
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_add_sales_order_item&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_sales_order_item
GO

create procedure usp_add_sales_order_item @id int output,
										 @sales_order_id int,
										 @item_master_id int,
										 @order_qty numeric(8, 2),
										 @init_unit_cost numeric(15,2),
										 @init_markup numeric(5,2) as
  begin
       declare @exist_cnt int
       declare @qty_on_hand numeric(8,2)

           --  Verify that Master Item  exists
       select
	             @qty_on_hand = qty_on_hand,
	             @init_unit_cost = unit_cost,
	             @init_markup = markup
	     from
	             item_master
	     where
	             id = @item_master_id

        if @@rowCount &lt;= 0
            raiserror(50019, 18, 1, @item_master_id)


          -- Add sales order
      insert into SALES_ORDER_ITEMS
		(sales_order_id,
		 item_master_id,
		 order_qty,
		 back_order_qty,
		 init_unit_cost,
		 init_markup)
	  values
		(@sales_order_id,
		 @item_master_id,
		 @order_qty,
		 null,
		 @init_unit_cost,
		 @init_markup)

    set @id = @@identity
  end
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o79">
<a:ObjectID>147BA0A6-836B-40EF-9EC6-7FEE9A19FBE0</a:ObjectID>
<a:Name>usp_add_xact</a:Name>
<a:Code>usp_add_xact</a:Code>
<a:CreationDate>1091288799</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1149813873</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the xact  table.    Returns value of the primary key via @id output parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_xact
 *  Descrsiption: Inserts a row into the xact  table.    Returns value of the primary key via @id output parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_add_xact&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_xact
GO

create procedure usp_add_xact @id int output, 
                              @xact_date datetime output, 
                              @xact_amt numeric(15,2), 
                              @xact_type_id int,
                              @tender_id int,
                              @neg_instr_no varchar(30),
                              @xact_reason varchar(100)  as
  begin
       declare @exist_cnt int
       declare @post_date datetime
       
       
       --  Verify that the Transaction Type exist.
       select
	            @exist_cnt = count(*)
	     from
	             xact_type
	     where
	             id = @xact_type_id
     
            --  Raise error if Transaction Type is not found.
        if @exist_cnt is null or @exist_cnt &lt;= 0 
            raiserror(50020, 18, 1, @xact_type_id)
  
       if @tender_id = 0
         set @tender_id = null
         
           -- Create Transaction      
       insert into XACT
					(xact_date, 
					 xact_amount,
					 xact_type_id,
                     tender_id,
					 posted_date,
                     neg_instr_no,
                     reason,
					 date_created, 
					 date_updated, 
					 user_id)
				values 
					(@xact_date,
					 @xact_amt,
					 @xact_type_id,
                     @tender_id,
					 null,
                     @neg_instr_no,
                     @xact_reason,
					 getdate(),
					 getdate(),
					 user)

    set @id = @@identity
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o80">
<a:ObjectID>E937C6DC-F853-459B-8D5D-CCD2EE15A792</a:ObjectID>
<a:Name>usp_add_xact_entry</a:Name>
<a:Code>usp_add_xact_entry</a:Code>
<a:CreationDate>1091086257</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1139066940</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Posts the amount of the target entry or one of the offset entries to the associated GL Account.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_post_xact_entry
 *      Returns: none
 *  Descrsiption: Posts the amount of the target entry or one of the offset entries to the associated GL Account.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_post_xact_entry&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_post_xact_entry
GO

create procedure usp_post_xact_entry @id int output, 
                                     @gl_account_id int, 
                                     @xact_id int, 
                                     @amount numeric(15, 2)  as
  begin
      declare @exist_cnt int
      declare @gl_acct_type_id int
      declare @xact_type_id int
      declare @xact_cat_id int
      declare @to_mltplr int
      declare @from_mltplr int
      declare @to_acct_type_id int
      declare @from_acct_type_id int
      declare @post_amount numeric(15,2)
      declare @acct_period varchar(15)
      declare @acct_period_type_id int
      declare @post_date datetime
      declare @str_post_amount varchar(30)
      
    
      set @post_date = dbo.ufn_get_datepart(getdate())
      set @str_post_amount = cast(@amount as varchar)
      
          -- Ensure that GL Account Id is valid  
      select
          @gl_acct_type_id = acct_type_id
      from
          gl_accounts
      where 
          id = @gl_account_id
            
      if @@rowcount &lt;= 0
         raiserror(50001, 18, 2)
/*
      -- Get transaction type id
      select
          @xact_type_id = xact_type_id  
      from 
          xact
      where 
          id = @xact_id
             
      if @@rowcount &lt;= 0
         raiserror(50001, 18, 1)

      --  Get Transaction Type details
      select
          @xact_cat_id = xact_category_id,
          @to_mltplr = to_multiplier,
          @from_mltplr = from_multiplier,
          @to_acct_type_id = to_acct_type_id,
          @from_acct_type_id = from_acct_type_id
      from
          xact_type
      where
          id = @xact_type_id
              
      if @@rowcount &lt;= 0
         raiserror(50001, 18, 1)
             
      --  Determine the multiplier that is to be applied to the entry&#39;s amount.
 	  if @to_acct_type_id = @gl_acct_type_id
        -- We are dealing with the target Entry of the transaction.
        begin
          if @to_mltplr is not null
             set @post_amount = @amount * @to_mltplr
           else
             -- Transaction Posting Failed!: The target multiplier for Transactoin Type, %d, 
             -- is not properly configured.  GL Account Id - %d, Post Amount - %d
             raiserror(50063, 18, 1, @xact_type_id, @gl_account_id, @str_post_amount)  
        end
     
	  
	  if @from_acct_type_id = @gl_acct_type_id
        -- We are dealing with an offset Entry of the transaction.
        begin
          if @from_mltplr is not null
             set @post_amount = @amount * @from_mltplr
           else
             -- Transaction Posting Failed!: The Offset multiplier for Transactoin Type, %d, is not properly configured.  GL Account Id - %d, Post Amount - %s
             raiserror(50064, 18, 1, @xact_type_id, @gl_account_id, @str_post_amount)  
        end                         
     
	  if @gl_acct_type_id &lt;&gt; @to_acct_type_id and @gl_acct_type_id &lt;&gt; @from_acct_type_id
        -- Transaction Posting Failed!: GL Account Type failed to match any of the account types configured for selected Transaction Type %d, GL Account ID %d, Post Amount %s
	    raiserror(50065, 18, 1, @xact_type_id, @gl_account_id, @str_post_amount)  

*/

      -- initialize post amount since the above code is commented out.
      set @post_amount = @amount
      
      --  Get current accounting period
      exec usp_get_cur_acct_prd @acct_period output
    
      --  Get current accounting period type id
      select
          @acct_period_type_id = acct_prd_type_id
      from 
          acct_pref
      where 
          id = 1
    
      if @@rowcount &lt;&gt; 1 
         raiserror(50001, 18, 1)
    
           -- Post entry to General Ledger
      insert into XACT_POSTING
            (gl_account_id,
              xact_id,
              period,
              period_type_id,
              post_amount,
              post_date,
              date_created,
              date_updated,
              user_id)
      values
            (@gl_account_id,
             @xact_id,
             @acct_period,
             @acct_period_type_id,
             @post_amount,
             null,
             getdate(),
             getdate(),
             user)
    
      if @@error &lt;&gt; 0 
          raiserror(50001, 18,1)
      
      if @@rowcount &gt; 0
         -- Get the primary key of the posted entry.
         set @id = @@identity
      else
         set @id = null    
  end
  
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o81">
<a:ObjectID>D9AA0699-99EB-44FF-A0D4-72CEA47F2956</a:ObjectID>
<a:Name>usp_add_xact_type_item_activity</a:Name>
<a:Code>usp_add_xact_type_item_activity</a:Code>
<a:CreationDate>1149637641</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1149715706</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Tracks individual items of a transaction.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_add_xact_type_item_activity
 *  Descrsiption: Creates customer transaction activity which reflects accounts receivable.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_add_xact_type_item_activity&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_add_xact_type_item_activity
GO

create procedure usp_add_xact_type_item_activity @id int output, 
                                                 @xact_id int,
                                                 @xact_type_item_id int, 
                                                 @xact_amt numeric(15,2),
                                                 @description varchar(50)  as
  begin
       declare @xact_date datetime
       declare @xact_type_id int
       
       set @xact_date = dbo.ufn_get_datepart(getdate())
       
       -- Verify that transaction is valid by attempting 
       -- to obtain its transaction type id
       select
             @xact_type_id = xact_type_id
         from
             xact
        where
             id = @xact_id
            
        --  Raise error if Transaction does not exist.
        if @xact_type_id is null or @xact_type_id &lt;= 0 
            raiserror(50038, 18, 1, @xact_id)
            
       -- Record transaction type item activity
       insert into XACT_TYPE_ITEM_ACTIVITY
			(xact_id,
             xact_type_item_id,
			 amount,
             description,
			 date_created, 
			 date_updated, 
			 user_id)
		values 
			(@xact_id,
             @xact_type_item_id,
			 @xact_amt,
             @description,
			 getdate(),
			 getdate(),
			 user)

        set @id = @@identity                   
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o43">
<a:ObjectID>CAECA257-895B-49D2-B916-BB058A9A004E</a:ObjectID>
<a:Name>usp_build_account_no</a:Name>
<a:Code>usp_build_account_no</a:Code>
<a:CreationDate>1089685410</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1089685474</a:ModificationDate>
<a:Modifier>Administrator</a:Modifier>
<a:Comment>Locates a Gl Account Category and packages the account data into a GlAccountCategory object where the the category&#39;s description matches exactly &quot;value&quot;.</a:Comment>
<a:Procedure.Text>create procedure usp_build_account_no @acct_type int,
                                       @acct_cat int,
                                       @acct_seq int,
                                       @acct_no varchar(25) output  as

begin
   declare @seq_calc varchar(10)

          --  Validate Data Values
   if @acct_type &lt;= 0
       raiserror(50001, 18, 1)
       
   if @acct_cat &lt;= 0
       raiserror(50001, 18, 1)
       
   if @acct_seq &lt;= 0 
       raiserror(50001, 18, 1)
       
        -- Compute GL Account Number using the Account Type Id, Account Catgegory Id, and Account Sequence Number
   set @acct_no =  cast(@acct_type as varchar) + &#39;-&#39;  +  cast(@acct_cat as varchar)  +  &#39;-&#39;
   
   if @acct_seq &gt;= 1 and @acct_seq &lt;= 9
      set @seq_calc = &#39;00&#39; + cast(@acct_seq as varchar)
      
   if @acct_seq &gt; 9 and @acct_seq &lt;= 99
      set @seq_calc = &#39;0&#39; + cast(@acct_seq as varchar)

   if @acct_seq &gt; 99 and @acct_seq &lt;= 999
      set @seq_calc = cast(@acct_seq as varchar)
      
   set @acct_no = @acct_no + @seq_calc
   
end
GO
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o82">
<a:ObjectID>15D7FDCC-514F-41A2-A416-8911A0F0340E</a:ObjectID>
<a:Name>usp_cancel_sales_order</a:Name>
<a:Code>usp_cancel_sales_order</a:Code>
<a:CreationDate>1094486009</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130654983</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Cancels a sales order.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_cancel_sales_order
 *  Descrsiption: Cancels a sales order.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_cancel_sales_order&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_cancel_sales_order
GO

create procedure usp_cancel_sales_order @so_id int,  @rc int output as
  begin
       declare @upd_cnt int
       declare @invoiced_ind int
       declare @item_id int
       declare @ord_qty numeric
       declare @back_order_qty numeric
       declare @so_stat_id int
       declare @xact_id int
       declare @new_xact_type_id int
       
       declare cur_so_items cursor for
           select
                  item_master_id,
                  order_qty,
                  back_order_qty
            from
                  sales_order_items
            where 
                  sales_order_id = @so_id
       
           --  Verify that Sales Order exists
       select
	         @invoiced_ind = invoiced
	     from
	         sales_order
	     where
	         id = @so_id

        if @@rowcount &lt;= 0 
            raiserror(50021, 18, 1, @so_id)

           --  Sales Order must be invoiced before cancelling.
        if @invoiced_ind = 0
            raiserror(50022, 18, 1)

            --  Process all items of the sales order.       
        set @upd_cnt = 0
        open cur_so_items
        fetch next from cur_so_items into @item_id, @ord_qty, @back_order_qty

       while @@fetch_status = 0
           begin
			 update 
				 item_master
			 set
				 qty_on_hand = isNull(qty_on_hand, 0) + isNull(@ord_qty, 0) + isNull(@back_order_qty, 0)
			 where
				 id = @item_id

			 set @upd_cnt = @upd_cnt + @@rowcount
			 fetch next from cur_so_items into @item_id, @ord_qty, @back_order_qty
           end
        close cur_so_items
        deallocate cur_so_items

        exec usp_chg_so_status @so_id, &#39;Cancelled&#39;
        
           -------------------------------------------------------------
           --   Let&#39;s begin reversing the transaction that is
           --   associated with the sales invoice.
           -------------------------------------------------------------
           
           --  Get transaction Id from sales invoice table.
        select
              @xact_id = xact_id 
        from
              sales_invoice
        where
              sales_order_id = @so_id

        if @@rowcount &lt;= 0 
            raiserror(50023, 18, 1)              
        
            --   Call stored proc to reverse the transaction
        set @new_xact_type_id = dbo.ufn_get_xact_type_id(&#39;Sales on Account Reversal&#39;)
        exec usp_reverse_xact @xact_id, @new_xact_type_id
        
        return
  end</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o83">
<a:ObjectID>0282842A-5620-4534-B23D-288309268B61</a:ObjectID>
<a:Name>usp_chg_item_status</a:Name>
<a:Code>usp_chg_item_status</a:Code>
<a:CreationDate>1093730458</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130655419</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Changes the status of an item.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_chg_item_status
 *      Returns: none
 *  Descrsiption: Changes the status of an item.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_chg_item_status&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_chg_item_status
GO

create procedure usp_chg_item_status @item_id int, 
																												                 @item_status_desc varchar(20)  as
  begin
      declare @item_stat_id int
      declare @cur_item_stat_hist_id int
      declare @cur_item_stat_id int
      declare @old_unit_cost numeric(15,2)
      declare @old_markup numeric(5,2)


           --  Get current item master status history key         
      select @cur_item_stat_hist_id = dbo.ufn_get_current_item_status_id( @item_id )
      if @cur_item_stat_hist_id &lt;= 0
  		    raiserror(50024, 18, 1, @item_id)
		    
		    --  Get current status data for item
	  select 
	        @cur_item_stat_id = item_status_id,
            @old_unit_cost = unit_cost,
            @old_markup = markup
      from
            ITEM_MASTER_STATUS_HIST
      where
            id = @cur_item_stat_hist_id
             
     if @@rowcount &lt;&gt; 1
        --  Current status history could not be obtained for item.
	    raiserror(50025, 18, 1, @item_id, @cur_item_stat_hist_id)             
		      
	--  Get destination item status id
    select @item_stat_id = dbo.ufn_get_item_status_id(@item_status_desc)
    if @item_stat_id = null
       --  Invalid item status description or name provided.
       raiserror(50026, 18, 1, @item_status_desc, @item_id)
        
    --  Put an ending date to the most recent item status, which should be &#39;Available&#39; or &#39;In Service&#39;.
    update 
         ITEM_MASTER_STATUS_HIST 
    set
         end_date = getdate(),
         user_id = user
    where 
         id = @cur_item_stat_hist_id
      
    --  Update Item Status History with the desination
    insert into ITEM_MASTER_STATUS_HIST
	   (item_master_id,
		item_status_id,
		unit_cost,
		markup,
		effective_date,
		end_date,
		date_created, 
		user_id)
    values
       (@item_id,
        @item_stat_id,
        @old_unit_cost,
        @old_markup,
        getdate(),
        null,
        getdate(),
        user)     
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o52">
<a:ObjectID>22A1D73C-5DA3-406E-98AA-11DDB335693F</a:ObjectID>
<a:Name>usp_chg_so_status</a:Name>
<a:Code>usp_chg_so_status</a:Code>
<a:CreationDate>1094486041</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130655584</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Adds sales order status history.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_chg_so_status
 *      Returns: none
 *  Descrsiption: Adds sales order status history.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_chg_so_status&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_chg_so_status
GO

create procedure usp_chg_so_status @so_id int, 
																										                  @so_status_desc varchar(20)  as
  begin
    declare @new_stat_id int
    declare @cur_stat_hist_id int
    declare @cur_stat_id int

    --  Get current sales order status history key         
    select @cur_stat_hist_id = dbo.ufn_get_current_so_status_id(@so_id)
    if @cur_stat_hist_id is null
       raiserror(50027, 18, 1, @so_id)
		    
    --  Get destination sales order status id
    select @new_stat_id = dbo.ufn_get_so_status_id(@so_status_desc)
    if @new_stat_id = null
        --  Invalid sales order status description or name provided.
        raiserror(50028, 18, 1, @so_status_desc)
        
    --  Put an ending date to the most recent item status, which should be &#39;Available&#39; or &#39;In Service&#39;.
    update 
         sales_order_status_hist
    set
         end_date = getdate(),
         user_id = user
    where 
         id = @cur_stat_hist_id
      
    --  Update sales order status history with the desination
    insert into sales_order_status_hist
       (sales_order_id,
		sales_order_status_id,
		effective_date,
		end_date,
		date_created, 
		user_id)
    values
       (@so_id,
        @new_stat_id,
        getdate(),
        null,
        getdate(),
        user)     
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o84">
<a:ObjectID>D0E7A7A4-A71A-434B-84F8-3E622BA74638</a:ObjectID>
<a:Name>usp_create_sales_invoice_xact</a:Name>
<a:Code>USP_CREATE_SALES_INVOICE_XACT</a:Code>
<a:CreationDate>1094486101</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1181016029</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Create transaction and post individual items of the transaction to the General Ledger.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_create_sales_invoice_xact
 *  Descrsiption: Create transaction and post individual items of the transaction to the General Ledger.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_create_sales_invoice_xact&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_create_sales_invoice_xact
GO

create procedure usp_create_sales_invoice_xact @xact_id int output,
                                               @sales_order_id int  as
  begin
       declare @exist_cnt int
       declare @xact_amt  numeric(15,2)
       declare @xact_type_id int
       declare @xact_date datetime
       declare @xact_post_id int
       declare @acct_id int
       declare @item_id int
       declare @order_qty numeric(5,2)
	   declare @unit_cost numeric(11,2)
	   declare @markup numeric(5,2)


       declare cur_sales_order_items_to_invoice cursor for
           select
                 item_master_id,
                 order_qty,
                 init_unit_cost,
                 init_markup
           from
                 sales_order_items
           where
                 sales_order_id = @sales_order_id

           --  Verify that Sales Order  exists
       select
	        @exist_cnt = count(*)
	   from
	        sales_order
	   where
	        id = @sales_order_id

       if @exist_cnt &lt;= 0
          raiserror(50021, 18, 1, @sales_order_id)

       --  Determine transaction amount
       select
            @xact_amt = isNull( sum( order_qty * (init_unit_cost * init_markup) ), 0)
       from
            sales_order_items
       where
            sales_order_id = @sales_order_id

       --  Get Transaction Type Id
       set @xact_type_id = dbo.ufn_get_xact_type_id(&#39;sales on account&#39;)
       if @xact_type_id = -100
          raiserror(50029, 18, 1, &#39;sales on account&#39;)

       -- Create transactaion
       exec usp_add_xact @xact_id output, @xact_date, @xact_amt, @xact_type_id

       -- Post target entry of transaction.
       set @acct_id =  dbo.ufn_get_account_id(&#39;accounts receivable&#39;)
       exec usp_add_xact_entry @xact_post_id,  @acct_id, @xact_id, @xact_amt

       --  Post offset entries of the transaction
       open  cur_sales_order_items_to_invoice
       fetch next from cur_sales_order_items_to_invoice into @item_id,	 @order_qty, @unit_cost, @markup

       while @@fetch_status = 0
         begin
            --  Get GL Account Id
            select
                 @acct_id = gla.id
            from
                 sales_order_items soi,
                 item_master im,
                 gl_accounts gla
            where
                  soi.item_master_id = @item_id
              and soi.item_master_id = im.id
              and soi.sales_order_id = @sales_order_id

            if @@rowcount &lt;&gt; 1
               raiserror(50030, 18, 1, @item_id, @sales_order_id)

            -- Calculate current offset amount
            set @xact_amt = @order_qty * (@unit_cost * @markup)
            exec usp_add_xact_entry @xact_post_id, @acct_id, @xact_id, @xact_amt

            -- Get next offset entry
		    fetch next from cur_sales_order_items_to_invoice into @item_id, @order_qty, @unit_cost,  @markup
		 end  --while
		 close cur_sales_order_items_to_invoice
		 deallocate cur_sales_order_items_to_invoice
   end
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o85">
<a:ObjectID>9EB1F9B5-48C5-405D-9C06-E3C8AF539849</a:ObjectID>
<a:Name>usp_decode_acct_prd</a:Name>
<a:Code>usp_decode_acct_prd</a:Code>
<a:CreationDate>1095910216</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130656091</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Retrieves the calendar month that corresponds to the accounting period which the busines is configured for.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: usp_decode_acct_prd
  *        Returns: int @period
 *  Description: Retrieves the calendar month that corresponds to the accounting period which the busines is 
 *                         configured for.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects  where  id = object_id(&#39;usp_decode_acct_prd&#39;)  and type in (&#39;P&#39;)) 
   drop procedure usp_decode_acct_prd
go



create procedure usp_decode_acct_prd @acct_period int, 
                                     @cal_month int output as

		begin
          declare @fy_start_month int      --  Beginning month of the fiscal year
          declare @last_cal_month int      --  Last month of the calendar year
          declare @acct_prd_type_id int    --  Type of Accounting period we are dealing with
          declare @FISCAL_YEAR int         --  Constant for Fiscal year type id  
          declare @prev_yr_periods int     --  Total periods from the start month of fiscal year to the last calendar monthof that year
          
          set @last_cal_month = 12
          set @FISCAL_YEAR = 2
          
          select 
                @fy_start_month = acct_prd_beg_month,
                @acct_prd_type_id = acct_prd_type_id
          from
                acct_pref
          where
                id = 1
          
          if @@rowcount &lt;&gt; 1
              raiserror(50031, 18, 1)
              
          if @acct_prd_type_id &lt;&gt; @FISCAL_YEAR
              begin
                  set @cal_month = @acct_period
                  return 
              end
          
             --  Determine Calendar month based on fiscal year.
          if @acct_period between @fy_start_month and @last_cal_month
             begin
                set @cal_month = (@fy_start_month + @acct_period) - 1
             end
          else   
             begin
                       -- We are in the next year
                 set @prev_yr_periods = (@last_cal_month - @fy_start_month) + 1
                 set @cal_month = (@acct_period - @prev_yr_periods)
             end    
                 
           return
		end
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o86">
<a:ObjectID>DEE4DFAC-77DF-48FE-82F5-10670AC14A9C</a:ObjectID>
<a:Name>usp_del_acct</a:Name>
<a:Code>usp_del_acct</a:Code>
<a:CreationDate>1090402453</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1095910393</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Deletes a GL Account from the system.    Raise error if one or more dependencies exist.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_del_acct
 *      Returns: none
 *  Descrsiption: Deletes a GL Account from the system.    Raise error if one or more dependencies exist.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_del_acct&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_del_acct
GO

create procedure usp_del_acct @id int as
  begin
      declare @depend_count int
      
          -- Check if GL Account have any dependencies
      exec @depend_count = dbo.ufn_get_acct_usage_count @id
      
          --  If dependencies exist, then raise error notifying client that GL Account cannot be deleted due to dependencies
      if @depend_count &gt; 0 
          raiserror(50032, 18, 1, @id)
      
          --  At this point it is okay to delete GL Account since there are no dependencies.
      delete from  GL_ACCOUNTS 
       where id = @id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o87">
<a:ObjectID>BD872D41-8DDF-4275-A065-D170202DBEA9</a:ObjectID>
<a:Name>usp_del_creditor</a:Name>
<a:Code>usp_del_creditor</a:Code>
<a:CreationDate>1090452606</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1095910529</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Deletes a creditor from the system.    Raise error if one or more dependencies exist.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_del_creditor
 *      Returns: none
 *  Descrsiption: Deletes a creditor from the system.    Raise error if one or more dependencies exist.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_del_creditor&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_del_creditor
GO

create procedure usp_del_creditor @id int as
  begin
      declare @depend_count int
      
          -- Check if Creditor has dependencies
      exec @depend_count = dbo.ufn_get_creditor_usage_count @id
      
          --  If dependencies exist, then raise error notifying client that creditor cannot be deleted due to dependencies
      if @depend_count &gt; 0 
          raiserror(50033, 18, 1, @id)
      
          --  At this point it is okay to delete creditor since there are no dependencies.
      delete from  CREDITOR 
       where id = @id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o88">
<a:ObjectID>0F634509-C167-48AE-8947-DB8273D2D1A1</a:ObjectID>
<a:Name>usp_del_customer</a:Name>
<a:Code>usp_del_customer</a:Code>
<a:CreationDate>1090451164</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1095910640</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Deletes a customer from the system.    Raise error if one or more dependencies exist.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_del_customer
 *      Returns: none
 *  Descrsiption: Deletes a customer from the system.    Raise error if one or more dependencies exist.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_del_customer&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_del_customer
GO

create procedure usp_del_customer @id int as
  begin
      declare @depend_count int
      
          -- Check if Customer has dependencies
      exec @depend_count = dbo.ufn_get_cust_usage_count @id
      
          --  If dependencies exist, then raise error notifying client that Customer cannot be deleted due to dependencies
      if @depend_count &gt; 0 
          raiserror(50034, 18, 1, @id)
      
          --  At this point it is okay to delete Customer since there are no dependencies.
      delete from  CUSTOMER 
       where id = @id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o89">
<a:ObjectID>470EAB6A-8AD1-46DE-80D2-E7FB1CD88EDB</a:ObjectID>
<a:Name>usp_del_item_master</a:Name>
<a:Code>usp_del_item_master</a:Code>
<a:CreationDate>1090442174</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1150922381</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Deletes a Item Master from the system.    Raise error if one or more dependencies exist.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_del_item_master
 *      Returns: none
 *  Descrsiption: Deletes a Item Master from the system.    Raise error if one or more dependencies exist.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_del_item_master&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_del_item_master
GO

create procedure usp_del_item_master @id int as
  begin
      declare @depend_count int
      
      -- Check if Item Master has dependencies
      exec @depend_count = dbo.ufn_get_item_usage_count @id
      
      --  If dependencies exist, then raise error notifying client that Item Master cannot be deleted due to dependencies
      if @depend_count &gt; 0 
          raiserror(50035, 18, 1, @id)
      
      -- remove all history pertaining to target item.
      delete from item_master_status_hist
        where item_master_id = @id
        
      --  At this point it is okay to delete GL Account since there are no dependencies.
      delete from  ITEM_MASTER 
       where id = @id
  end
go
            </a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o90">
<a:ObjectID>4FC58A16-B099-4513-89A8-A77D419E1916</a:ObjectID>
<a:Name>usp_del_sales_order_items</a:Name>
<a:Code>usp_del_sales_order_items</a:Code>
<a:CreationDate>1094486144</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130656268</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Deletes all items pertaining to a selected sales order</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_del_sales_order_items
 *  Descrsiption: Deletes all items pertaining to a selected sales order
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_del_sales_order_items&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_del_sales_order_items
GO

create procedure usp_del_sales_order_items @sales_order_id int  as
  begin
      delete from SALES_ORDER_ITEMS
	   where sales_order_id = @sales_order_id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o91">
<a:ObjectID>2A10679C-4EC9-4ADD-86D3-8663BC2B2FF3</a:ObjectID>
<a:Name>usp_get_creditor_balance</a:Name>
<a:Code>usp_get_creditor_balance</a:Code>
<a:CreationDate>1136070628</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1136070628</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Returns creditors balance.</a:Comment>
<a:Procedure.Text>create procedure usp_get_creditor_balance (@creditor_id int, @amount numeric output)
as
begin
  select 
      @amount = isnull(sum(amount), 0) 
  from 
      creditor_activity  
  where 
      creditor_id = @creditor_id
end
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o92">
<a:ObjectID>B193F4CD-BE7C-4C0D-8851-DA9C63827C86</a:ObjectID>
<a:Name>usp_get_cur_acct_prd</a:Name>
<a:Code>usp_get_cur_acct_prd</a:Code>
<a:CreationDate>1095910947</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130656335</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment> Retrieves the current account period based on the account period type which the business is configured for.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Method: usp_get_cur_acct_prd
  *        Returns: varchar @period
 *  Description: Retrieves the current account period based on the account period type which the business is 
 *                         configured for.
 *******************************************************************************************************************************/
if exists (select 1 from sysobjects  where  id = object_id(&#39;usp_get_cur_acct_prd&#39;)  and type in (&#39;P&#39;)) 
   drop procedure usp_get_cur_acct_prd
go



create procedure usp_get_cur_acct_prd @acct_period varchar(10) output as

		begin
          declare @cur_month int           -- Current month
          declare @fiscal_prd int          -- Calculated Fiscal Year Month
          declare @cur_yr int              --  Current year
          declare @fy_start_month int      --  Beginning month of the fiscal year
          declare @last_cal_month int      --  Last month of the calendar year
          declare @acct_prd_type_id int    --  Type of Accounting period we are dealing with
          declare @FISCAL_YEAR int         --  Constant for Fiscal year type id  
          declare @prev_yr_periods int     --  Total periods from the start month of fiscal year to the last calendar monthof that year
          declare @cur_date datetime
          
          set @last_cal_month = 12
          set @cur_date = getdate()
          select @cur_month = month(@cur_date)
          set @cur_yr = year(@cur_date)
          set @FISCAL_YEAR = 2
          
          select 
               @fy_start_month = acct_prd_beg_month,
               @acct_prd_type_id = acct_prd_type_id
          from
               acct_pref
          where
               id = 1
          
          if @@rowcount &lt;&gt; 1
              raiserror(50031, 18, 1)
              
          if @acct_prd_type_id &lt;&gt; @FISCAL_YEAR
              begin
                  set @acct_period = cast(@cur_month as varchar) + &#39;-&#39; + cast(@cur_yr as varchar)
                  return 
              end
          
          --  Determine account period based on fiscal year.
          if @cur_month between @fy_start_month and @last_cal_month
             begin
                set @fiscal_prd = (@cur_month - @fy_start_month) + 1
                set @acct_period = cast(@fiscal_prd as varchar) + &#39;-&#39; + cast(@cur_yr as varchar)
             end
          else   
             begin
                 -- We are in the next year
                 set @prev_yr_periods = (@last_cal_month - @fy_start_month) + 1
                 set @fiscal_prd = (@prev_yr_periods + @cur_month)
                 set @cur_yr = @cur_yr + 1
                 set @acct_period = cast(@fiscal_prd as varchar) + &#39;-&#39; + cast(@cur_yr as varchar)
             end    
                 
           return
		end
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o93">
<a:ObjectID>B7647203-695B-4A18-A0ED-C1834D43A13F</a:ObjectID>
<a:Name>usp_get_customer_balance</a:Name>
<a:Code>USP_GET_CUSTOMER_BALANCE</a:Code>
<a:CreationDate>1136059508</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1181016545</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Returns customer balance.</a:Comment>
<a:Procedure.Text>create procedure usp_get_customer_balance (@customer_id int, @amount numeric output)
as
begin
  select 
      @amount = isnull(sum(amount), 0) 
  from 
      customer_activity  
  where 
      customer_id = @customer_id
end
</a:Procedure.Text>
<a:Procedure.Function>1</a:Procedure.Function>
</o:Procedure>
<o:Procedure Id="o45">
<a:ObjectID>4EC2B52C-2FBE-4750-B684-838A8D116D63</a:ObjectID>
<a:Name>usp_get_next_acct_seq</a:Name>
<a:Code>usp_get_next_acct_seq</a:Code>
<a:CreationDate>1089685549</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1130656399</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Locates a Gl Account Category and packages the account data into a GlAccountCategory object where the the category&#39;s description matches exactly &quot;value&quot;.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *       Method: usp_get_next_acct_seq
 *   Prototype: int (Account Type Id)
 *                      int (Account Category Id)
 *                      int (New Account Id) output
 *      Returns: none
 *  Description: Locates a Gl Account Category and packages the account data into a GlAccountCategory object
 *                         where the the category&#39;s description matches exactly &quot;value&quot;.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_get_next_acct_seq&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_get_next_acct_seq
GO

create procedure usp_get_next_acct_seq  @acct_type_id int, 
                                        @acct_catg_id int,
                                        @seq_no int output as
  declare @acct_seq int
      
  begin
      if @acct_type_id &lt;= 0
         raiserror(50001, 18, 1, &#39;GL Account Type cannot be blank&#39;)
           
      if @acct_catg_id &lt;= 0
         raiserror(50001, 18, 1, &#39;GL Account Category cannot be blank&#39;)
    
      select 
            @acct_seq = max(acct_seq) 
      from 
            gl_accounts 
      where 
            acct_type_id = @acct_type_id
        and acct_cat_id = @acct_catg_id
      
      if @acct_seq is null 
         set  @acct_seq = 1
      else
         set @acct_seq = @acct_seq  + 1

      set @seq_no = @acct_seq          
                
  end
  
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o94">
<a:ObjectID>F45B89A4-CF36-4E57-80FB-67E79A390997</a:ObjectID>
<a:Name>usp_invoice_sales_order</a:Name>
<a:Code>usp_invoice_sales_order</a:Code>
<a:CreationDate>1094486186</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1141966572</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Invoices a sales order.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_invoice_sales_order
 *  Descrsiption: Invoices a sales order.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_invoice_sales_order&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_invoice_sales_order
GO

create procedure usp_invoice_sales_order @invoice_id int output, 
                                         @xact_id int,
                                         @sales_order_id int  as
  begin
    declare @exist_cnt int
    declare @invoice_number varchar(20)
    declare @date_number varchar(20)
    declare @MERCH_ITEM_TYPE int
    declare @item_id int
	declare @order_qty numeric(5,2)
	declare @unit_cost numeric(11,2)
	declare @markup numeric(5,2)
	declare @qty_on_hand numeric(12,2)
	declare @back_order_qty numeric(12,2)
	declare @cur_item_stat_hist_id int
	declare @out_of_stock_stat_id int
	declare @OUT_OF_STOCK  varchar(20)
	declare @INVOICED  varchar(10)
        declare @msg  varchar(100)
   
    set @MERCH_ITEM_TYPE = 2   
  	declare cur_sales_order_items cursor for
		select
			  item_master_id,
			  order_qty,
			  init_unit_cost,
			  init_markup
		from
			  sales_order_items,
              item_master
		where 
			  sales_order_id = @sales_order_id
          and sales_order_items.item_master_id = item_master.id
          and item_master.item_type_id = @MERCH_ITEM_TYPE
      
    set @OUT_OF_STOCK = &#39;Out of Stock&#39;
    set @INVOICED = &#39;Invoiced&#39;
    
      
    --  Verify that Transaction exists
    select
          @exist_cnt = count(*)
    from
          xact
    where
          id = @xact_id      
      
    if @exist_cnt &lt;= 0 
       raiserror(50038, 18, 1, @xact_id)
      
      
    --  Verify that Sales Order exists
    select
          @exist_cnt = count(*)
    from
          sales_order
    where
          id = @sales_order_id

    if @exist_cnt &lt;= 0 
       raiserror(50021, 18, 1, @sales_order_id)

    --  Build Sales Invoice number in the format of &lt;slaes order id&gt; - &lt;MMDDYYYY&gt;
    set @date_number = dbo.ufn_convert_date_to_num(getdate())
    set @invoice_number = cast(@sales_order_id as varchar) + &#39;-&#39; + @date_number
      

/*
    -- Create Transaction
    
    exec usp_create_sales_invoice_xact @xact_id output, @sales_order_id
   if @xact_id is null or @xact_id &lt;= 0
      raiserror(50001, 18, 1, @sales_order_id)
*/    
   -- Create Sales Invoice.
   insert into SALES_INVOICE
     (sales_order_id,
      invoice_no,
      xact_id,
      date_created,
      date_updated,
      user_id)
   values 
     (@sales_order_id,
      @invoice_number,
      @xact_id,
      getdate(),
      getdate(),
      user)
       
   set @invoice_id = @@identity
    
   --  Ensure that there is adequate quantity on hand for each sales order item.    It not,
   --  create a back order amount for item.
   open  cur_sales_order_items 
   fetch next from cur_sales_order_items into @item_id, @order_qty, @unit_cost, @markup
   while @@fetch_status = 0
	 begin
	   --  Get Quantity on Hand for current item from item master table
	   select
			 @qty_on_hand = qty_on_hand
	   from 
			 item_master
	   where
	    	 id = @item_id

       if @@rowcount &lt;&gt; 1 
		  raiserror(50037, 18, 1, @item_id)

	   --  Compare order qty of item to actual qty on hand of item master to determine if item 
	   --  back order is required.   If item quantity is insufficient and back order is required, calculate 
	   --  back order quantity amount and adjust order qauantity to the quantity available for sale.
	   if @order_qty &gt; @qty_on_hand
	      begin
			set @back_order_qty = @order_qty - @qty_on_hand
			set @order_qty = @qty_on_hand

			-- Adjust sales order item
			update 
    			  sales_order_items 
			set
				  order_qty = @order_qty,
				  back_order_qty = @back_order_qty
			where
			      sales_order_id = @sales_order_id
	  		  and item_master_id = @item_id
	      end
	    else
		  begin
		    set @back_order_qty = 0
          end
  
		--  Adjust Item Master Inventory Quantity for the current sales order item.
        set @msg = &#39;Preparing to update quantiy on hand for item &#39; + cast(@item_id as varchar)
        exec usp_log_message @msg, 1
		update 
		  	   item_master
	    set
			   qty_on_hand = qty_on_hand - @order_qty
   	    where
			   id = @item_id          

        --  Change status of current item to &#39;Out of Stock&#39; if value is something otherwise.
        if @qty_on_hand &lt;= 0
          begin
            select @cur_item_stat_hist_id = dbo.ufn_get_current_item_status(@item_id)
            select @out_of_stock_stat_id = dbo.ufn_get_item_status_id(@OUT_OF_STOCK)
            if @cur_item_stat_hist_id &lt;&gt; @out_of_stock_stat_id
               exec usp_chg_item_status @item_id, @OUT_OF_STOCK
          end
                  
	 	  -- Get next offset entry
		  fetch next from cur_sales_order_items into @item_id, @order_qty, @unit_cost, @markup

	end  --while
	close cur_sales_order_items
	deallocate cur_sales_order_items
    
/*
        --  Post transaction.
    exec usp_post_xact @xact_id
*/

    set @msg = &#39;Invoicing Sales Order from stored proc &#39; + cast(@sales_order_id as varchar)
    exec usp_log_message @msg, 1
        --  Flag sales order as invoiced.    
    update 
           sales_order
    set
           invoiced = 1,
           user_id = user,
           date_updated = getdate()
    where
           id = @sales_order_id           

    set @msg = &#39;Total number of sales orders Invoiced: &#39; + cast(@@rowcount as varchar)
    exec usp_log_message @msg, 1
       --  Update sales order status to &#39;Inoviced&#39;    
    exec usp_chg_so_status @sales_order_id, @INVOICED
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Shortcut Id="o95">
<a:ObjectID>E9A9BEDB-8FCF-4BF7-AB47-D8F5C99E62D8</a:ObjectID>
<a:Name>usp_log_message</a:Name>
<a:Code>usp_log_message</a:Code>
<a:CreationDate>1141543400</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1141543400</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetStereotype/>
<a:TargetID>E5BF0AB7-FB08-489E-8639-EA62C7485505</a:TargetID>
<a:TargetClassID>D4B2DF40-0047-11D2-9952-006097355D9B</a:TargetClassID>
<a:GenerationType>0</a:GenerationType>
<a:TargetPackagePath>&lt;Model&gt;</a:TargetPackagePath>
</o:Shortcut>
<o:Procedure Id="o96">
<a:ObjectID>83F50588-8651-43C3-8AED-0CA9512F4709</a:ObjectID>
<a:Name>usp_post_xact</a:Name>
<a:Code>usp_post_xact</a:Code>
<a:CreationDate>1091256241</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1116642836</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Updates xact row by setting posted_date column to the current date.    This is generally done after all
transaction entries have been successfully posted to the General Ledger.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_post_xact
 *  Descrsiption: Updates xact row by setting posted_date column to the current date.    This is generally done after all
 *                            transaction entries have been successfully posted to the General Ledger.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_post_xact&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_post_xact
GO

create procedure usp_post_xact @id int as
  begin
      -- Post Transaction      
      update 
          XACT 
      set
	  	  posted_date = getdate()
	  where 
          id = @id

      -- Post Transaction Items
      update 
          XACT_POSTING 
      set
          post_date = getdate()
      where 
          xact_id = @id
        
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o97">
<a:ObjectID>A03941AF-0DED-4F3C-A6BC-FE56DF3DB3F3</a:ObjectID>
<a:Name>usp_post_xact_entry</a:Name>
<a:Code>usp_post_xact_entry</a:Code>
<a:CreationDate>1119710189</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130657385</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Procedure.Text>if exists (select * from dbo.sysobjects where id = object_id(N&#39;[dbo].[usp_post_xact_entry]&#39;) and OBJECTPROPERTY(id, N&#39;IsProcedure&#39;) = 1)
drop procedure [dbo].[usp_post_xact_entry]
GO

create procedure usp_post_xact_entry @id int output, 
                                     @gl_account_id int, 
                                     @xact_id int, 
                                     @amount numeric(15, 2)  as
  begin
      declare @exist_cnt int
      declare @gl_acct_type_id int
      declare @xact_type_id int
      declare @xact_cat_id int
      declare @to_mltplr int
      declare @from_mltplr int
      declare @to_acct_type_id int
      declare @from_acct_type_id int
      declare @post_amount numeric(15,2)
      declare @acct_period varchar(15)
      declare @acct_period_type_id int
      declare @post_date datetime
      declare @str_post_amount varchar(30)
      
    
      set @post_date = dbo.ufn_get_datepart(getdate())
      set @str_post_amount = cast(@amount as varchar)
      
          -- Ensure that GL Account Id is valid  
      select
          @gl_acct_type_id = acct_type_id
      from
          gl_accounts
      where 
          id = @gl_account_id
            
      if @@rowcount &lt;= 0
         raiserror(50001, 18, 2)
      -- Get transaction type id
      select
          @xact_type_id = xact_type_id  
      from 
          xact
      where 
          id = @xact_id
             
      if @@rowcount &lt;= 0
         raiserror(50001, 18, 1)
        
      --  Get Transaction Type details
      select
          @xact_cat_id = xact_category_id,
          @to_mltplr = to_multiplier,
          @from_mltplr = from_multiplier,
          @to_acct_type_id = to_acct_type_id,
          @from_acct_type_id = from_acct_type_id
      from
          xact_type
      where
          id = @xact_type_id
              
      if @@rowcount &lt;= 0
         raiserror(50001, 18, 1)
             
      --  Determine the multiplier that is to be applied to the entry&#39;s amount.
 	  if @to_acct_type_id = @gl_acct_type_id
        -- We are dealing with the target Entry of the transaction.
        begin
          if @to_mltplr is not null
             set @post_amount = @amount * @to_mltplr
           else
             -- Transaction Posting Failed!: The target multiplier for Transactoin Type, %d, 
             -- is not properly configured.  GL Account Id - %d, Post Amount - %d
             raiserror(50063, 18, 1, @xact_type_id, @gl_account_id, @str_post_amount)  
        end
     
	  
	  if @from_acct_type_id = @gl_acct_type_id
        -- We are dealing with an offset Entry of the transaction.
        begin
          if @from_mltplr is not null
             set @post_amount = @amount * @from_mltplr
           else
             -- Transaction Posting Failed!: The Offset multiplier for Transactoin Type, %d, is not properly configured.  GL Account Id - %d, Post Amount - %s
             raiserror(50064, 18, 1, @xact_type_id, @gl_account_id, @str_post_amount)  
        end                         
     
	  if @gl_acct_type_id &lt;&gt; @to_acct_type_id and @gl_acct_type_id &lt;&gt; @from_acct_type_id
        -- Transaction Posting Failed!: GL Account Type failed to match any of the account types configured for selected Transaction Type %d, GL Account ID %d, Post Amount %s
	    raiserror(50065, 18, 1, @xact_type_id, @gl_account_id, @str_post_amount)  
        
      --  Get current accounting period
      exec usp_get_cur_acct_prd @acct_period output
    
      --  Get current accounting period type id
      select
          @acct_period_type_id = acct_prd_type_id
      from 
          acct_pref
      where 
          id = 1
    
      if @@rowcount &lt;&gt; 1 
         raiserror(50001, 18, 1)
    
           -- Post entry to General Ledger
      insert into XACT_POSTING
         (gl_account_id,
          xact_id,
          period,
          period_type_id,
          post_amount,
          post_date,
          date_created,
          date_updated,
          user_id)
      values
         (@gl_account_id,
          @xact_id,
          @acct_period,
          @acct_period_type_id,
          @post_amount,
          null,
          getdate(),
          getdate(),
          user)
    
      if @@error &lt;&gt; 0 
          raiserror(50001, 18,1)
      
      if @@rowcount &gt; 0
         -- Get the primary key of the posted entry.
         set @id = @@identity
      else
         set @id = null    
  end
  

</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o98">
<a:ObjectID>9EE97CD2-3D44-4433-A094-67582655B714</a:ObjectID>
<a:Name>usp_reverse_xact</a:Name>
<a:Code>usp_reverse_xact</a:Code>
<a:CreationDate>1094486227</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1130657596</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>reverses transaction along with reversing associated GL entries.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_reverse_xact
 *  Descrsiption: reverses transaction along with reversing associated GL entries.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_reverse_xact&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_reverse_xact
GO

create procedure usp_reverse_xact @old_xact_id int, @new_xact_type_id int as
  begin
       declare @rc int
       declare @xact_type_id int
       declare @xact_amount  numeric(11,2)
       declare @xact_date  datetime
       declare @new_xact_id int
       declare @xact_cat_id int
       declare @to_mltplr int
       declare @from_mltplr int
       declare @to_acct_type_id int
       declare @from_acct_type_id int
       declare @gl_acct_id int
       declare @gl_amt   numeric(11,2)
       declare @today datetime
              
       declare cur_old_xact_postings cursor for
           select
                  gl_account_id,
                  abs(post_amount)
            from
                  xact_posting
            where 
                  xact_id = @old_xact_id
       
       
       --  Verify that old transaction exist.
       select
	         @xact_type_id = xact_type_id,
	         @xact_amount = xact_amount * -1,
	         @xact_date = xact_date
	   from
	         xact
	   where
	         id = @old_xact_id

       if @@rowcount &lt;= 0 
          raiserror(50038, 18, 1, @old_xact_id)

       --  Add new transaction
       set @today = getdate()
       exec usp_add_xact @new_xact_id output, @today, @xact_amount, @new_xact_type_id
       if @new_xact_id &lt;= 0
          raiserror(50039, 18, 1, @old_xact_id)
     
       --  Reverse all GL entries tied to the old transaction id.
       open cur_old_xact_postings
       fetch next from cur_old_xact_postings into @gl_acct_id, @gl_amt
           
       while @@fetch_status = 0
	   	 begin
		   --  Add reversed GL Account entry
		   exec usp_add_xact_entry @rc output, @gl_acct_id, @new_xact_id, @gl_amt
		   fetch next from cur_old_xact_postings into @gl_acct_id, @gl_amt
		 end
       close cur_old_xact_postings
       deallocate cur_old_xact_postings

       --  Post the new transaction
       exec usp_post_xact @new_xact_id
        
       return
  end
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o99">
<a:ObjectID>942BA0DF-82C2-4F96-B9F5-8796B059AD39</a:ObjectID>
<a:Name>usp_upd_acct</a:Name>
<a:Code>usp_upd_acct</a:Code>
<a:CreationDate>1089684383</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1112587304</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the gl_accounts table.    Returns value of the primary key via @id output  parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_upd_acct
 *      Returns: none
 *  Descrsiption: Inserts a row into the gl_accounts table.    Returns value of the primary key via @id output
 *                         parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_upd_acct&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_upd_acct
GO

create procedure usp_upd_acct @id int, 
                              @name varchar(100), 
                              @descr varchar(255) as
  begin
      update GL_ACCOUNTS set
           name = @name,
           description = @descr,
           date_updated = getdate(),
           user_id = user
       where id = @id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o100">
<a:ObjectID>7ED363B5-6A15-461D-9036-0BDB1D94132A</a:ObjectID>
<a:Name>usp_upd_acct_catg_type</a:Name>
<a:Code>usp_upd_acct_catg_type</a:Code>
<a:CreationDate>1089685662</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1095911960</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Updates the description of a GL Account Categroy Type.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *               Name: usp_upd_acct_catg_type
 *         Prototype: id int 
 *                            desc varchar(50)
 *           Returns: none
 *  Descrsiption: Updates the description of a GL Account Categroy Type.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects 
         WHERE name = &#39;usp_upd_acct_catg_type&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_upd_acct_catg_type
GO

create procedure usp_upd_acct_catg_type @id int, 
																																							@desc varchar(50) as
  begin
      update GL_ACCOUNT_CATEGORY set
           description =  @desc,
           date_updated = getdate()
           where id = @id;
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o101">
<a:ObjectID>4E28553C-0B6F-4519-8BC0-A8A3177A79ED</a:ObjectID>
<a:Name>usp_upd_creditor</a:Name>
<a:Code>usp_upd_creditor</a:Code>
<a:CreationDate>1089685983</a:CreationDate>
<a:Creator>Administrator</a:Creator>
<a:ModificationDate>1130657712</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Updates the credit limit and APR in the creditor table.    </a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_upd_creditor
 *      Returns: none
 *  Descrsiption: Updates the credit limit and APR in the creditor table.    
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_upd_creditor&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_upd_creditor
GO

create procedure usp_upd_creditor @id int , 
                                  @crediti_limit numeric(15, 2),
                                  @apr numeric (6, 4) as
  begin
    --  Modifiy creditior to the database
    update 
         CREDITOR 
    set
	     credit_limit = isNull(@crediti_limit, 0),
         apr = isNull(@apr, 0),
	     date_updated = getdate(),
	     user_id = user
	where 
         id = @id
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o102">
<a:ObjectID>592BA0EE-6A64-4C34-8461-22816B54833A</a:ObjectID>
<a:Name>usp_upd_customer</a:Name>
<a:Code>usp_upd_customer</a:Code>
<a:CreationDate>1090278544</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1132449316</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Updates a row into the customer table.    Customer can be represented by a personal contact or a business entityt..never both.   

Returns value of the primary key via @id output  parameter.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_upd_customer
 *      Returns: none
 *  Descrsiption: Updates a row into the customer table.    Returns value of the primary key via @id output  parameter.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects WHERE name = &#39;usp_upd_customer&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_upd_customer
GO

create procedure usp_upd_customer @id int,
                                  @person_id int,
                                  @business_id int,
                                  @credit_limit numeric(15, 2) as
  begin
      declare @exist_cnt int
      declare @ASSET_ACCT_TYPE int
      declare @ACCT_RECV_ID int
      declare @user_id  varchar(25)      
      
      set @user_id = dbo.ufn_get_app_user_id()       

	  if @person_id &lt;= 0
		 set @person_id = null
	  if @business_id &lt;= 0
		 set @business_id = null

      if @person_id is not null and @business_id is not null
         raiserror(50061, 18, 1)

      --  Validate Person Id
      if @person_id is not null
    	 begin
    	   select
    		   @exist_cnt = count(*)
    	   from
    		   person
    	   where
    		   id = @person_id

		   --  Raise error if Person is not found.
		   if @exist_cnt &lt;= 0
			  raiserror(50014, 18, 1, @person_id)
	     end

    					 -- Validate Business Id
      if @business_id is not null
    	 begin
    	   select
    		   @exist_cnt  = count(*)
    	   from
    		   business
    	   where
    		   id = @business_id

		   --  Raise error if Business is not found.
		   if @exist_cnt &lt;= 0
			  raiserror(50015, 18, 1, @business_id)
		 end

      -- Update customer to the database
      update 
          CUSTOMER 
      set
		  person_id = @person_id,
		  business_id = @business_id,
		  credit_limit = @credit_limit,
		  date_updated = getdate(),
		  user_id = @user_id
      where 
          id = @id

  end
go
</a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o103">
<a:ObjectID>54CC29A1-A3CC-4889-BA1F-5996D7C09AFD</a:ObjectID>
<a:Name>usp_upd_item_master</a:Name>
<a:Code>usp_upd_item_master</a:Code>
<a:CreationDate>1090278392</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1150913029</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Inserts a row into the item master  table.    Returns the following values to the caller via output parameter:   item master primary key as @id,  gl account id as @gl_account_id,  retail price as @retail_price, and active as @active</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_upd_item_master
 *      Returns: none
 *  Descrsiption: Inserts a row into the item master  table.    Returns the following values to the caller via output 
 *                           parameter:   item master primary key as @id,  gl account id as @gl_account_id,
 *                           retail price as @retail_price, and active as @active
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_upd_item_master&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_upd_item_master
GO

create procedure usp_upd_item_master @id int, 
									 @vendor_id int output, 
                                     @item_type_id int,
									 @vendor_item_descr varchar(80), 
									 @vendor_item_no varchar(25),
									 @item_serial_no varchar(25),
									 @qty_on_hand int,
									 @unit_cost numeric(15,2),
									 @markup numeric(5,2),
									 @retail_price numeric (15, 2) output,
                                     @override_retail bit,
									 @active bit output    as
  begin
      declare @exist_cnt int
      declare @item_stat_id int
      declare @cur_item_stat_hist_id int

      -- Verify vendor exists
      if @vendor_id &gt; 0
        begin
          select
               @exist_cnt  = count(*)
           from
               creditor
           where 
               id = @vendor_id
              
          --  Raise error if Vendor is not found.
          if @exist_cnt is null or @exist_cnt &lt;= 0
            raiserror(50016, 18, 1, @vendor_id)               
        end
      else
         begin
           set @vendor_id = null
         end
         
      --  Update item with changes to the database.
      update 
            ITEM_MASTER 
      set
            vendor_id = @vendor_id,
			description = @vendor_item_descr,
			vendor_item_no =@vendor_item_no,
            item_type_id = @item_type_id,
			item_serial_no = @item_serial_no,
			qty_on_hand = @qty_on_hand, 
            unit_cost = @unit_cost,
            markup = @markup,
            active = @active,
			retail_price = @retail_price,
            override_retail = @override_retail,
			date_updated = getdate(), 
			user_id = user
	  where 
            id = @id

    select @cur_item_stat_hist_id = dbo.ufn_get_current_item_status_id( @id )
    if @cur_item_stat_hist_id &lt;= 0
		    raiserror(50024, 18, 1, @cur_item_stat_hist_id )
 
	 --  Otherwise, make changes to item status history.
     select @item_stat_id = dbo.ufn_get_item_status_id(&#39;Replaced&#39;)
    
     --  Change the most recent item status, which should be &#39;Replaced&#39;
     update 
           ITEM_MASTER_STATUS_HIST 
     set
           item_status_id = @item_stat_id,
           end_date = getdate(),
           user_id = user
     where 
           id = @cur_item_stat_hist_id
      
    --   Place Item in &quot;Available&quot; if quantity is greater than zero.   Otherwise, &#39;Out of Stock&#39;.
    if @qty_on_hand &lt;= 0
       select @item_stat_id = dbo.ufn_get_item_status_id(&#39;Out of Stock&#39;)
    else
       select @item_stat_id = dbo.ufn_get_item_status_id(&#39;Available&#39;)
       
    if @active = 0 
       select @item_stat_id = dbo.ufn_get_item_status_id(&#39;Out of Service&#39;)
       
    --  Update Item Status History with new unit cost and/or markup.
     insert into ITEM_MASTER_STATUS_HIST
	   (item_master_id,
		item_status_id,
		unit_cost,
		markup,
		effective_date,
		end_date,
		date_created, 
		user_id)
     values
       (@id,
        @item_stat_id,
        @unit_cost,
        @markup,
        getdate(),
        null,
        getdate(),
        user)     
  end
go
            </a:Procedure.Text>
</o:Procedure>
<o:Procedure Id="o104">
<a:ObjectID>E225E28C-A0FF-436C-A75E-D6E9085B937C</a:ObjectID>
<a:Name>usp_upd_sales_order</a:Name>
<a:Code>usp_upd_sales_order</a:Code>
<a:CreationDate>1094486258</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1141966852</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Comment>Modifies an existing sales order.   Only the customer id can be changed.</a:Comment>
<a:Procedure.Text>/******************************************************************************************************************************
 *         Name: usp_upd_sales_order
 *  Descrsiption: Modifies an existing sales order.   Only the customer id can be changed.
 *******************************************************************************************************************************/

IF EXISTS (SELECT name FROM sysobjects  WHERE name = &#39;usp_upd_sales_order&#39; AND type = &#39;P&#39;)
   DROP PROCEDURE usp_upd_sales_order
GO

create procedure usp_upd_sales_order @id int output, 
                                     @customer_id int  as
  begin
       declare @exist_cnt int
       
       --  Verify that Customer exists
       select
	         @exist_cnt = count(*)
	   from
	         customer
	   where
	         id = @customer_id

       if @exist_cnt &lt;= 0 
          raiserror(50018, 18, 1, @customer_id)

       update 
             SALES_ORDER 
       set
			 customer_id = @customer_id,
			 date_updated = getdate(), 
			 user_id = user
       where id = @id
             
  end
go
            </a:Procedure.Text>
</o:Procedure>
</c:Procedures>
<c:DefaultGroups>
<o:Group Id="o105">
<a:ObjectID>EF198E7A-8316-409D-81A6-04AFFFA7A137</a:ObjectID>
<a:Name>PUBLIC</a:Name>
<a:Code>PUBLIC</a:Code>
<a:CreationDate>1157594478</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157594478</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
</o:Group>
</c:DefaultGroups>
<c:ChildExtendedDependencies>
<o:ExtendedDependency Id="o8">
<a:ObjectID>F6696CC3-04DA-46BD-9640-2D5303F29E84</a:ObjectID>
<a:CreationDate>1157595259</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595259</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o43"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o44"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o11">
<a:ObjectID>672673D1-734E-4A77-93DF-8373043E76BF</a:ObjectID>
<a:CreationDate>1157595259</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595259</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o45"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o44"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o15">
<a:ObjectID>E5A1CD86-BAC7-4B53-B877-1827332FA016</a:ObjectID>
<a:CreationDate>1157595428</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595428</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o47"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o46"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o17">
<a:ObjectID>D35D8652-89D2-48ED-BB11-43B5708AFC2A</a:ObjectID>
<a:CreationDate>1157595428</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595428</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o44"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o46"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o21">
<a:ObjectID>837FE19E-395E-4AB1-81F0-9525794DA68A</a:ObjectID>
<a:CreationDate>1157595475</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595475</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o50"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o48"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o23">
<a:ObjectID>7590761A-9D5B-4A83-B443-C18A6C1B987D</a:ObjectID>
<a:CreationDate>1157595475</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595475</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o47"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o48"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o26">
<a:ObjectID>C1EFE849-85CB-4FEE-AFD5-122D11D2DD57</a:ObjectID>
<a:CreationDate>1157595497</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595497</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o50"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o49"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o28">
<a:ObjectID>56F5BDA2-E1E1-4C7B-B5F8-D08C12D2EC62</a:ObjectID>
<a:CreationDate>1157595497</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595497</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o47"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o49"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o32">
<a:ObjectID>F3B67C78-95A5-4349-B58C-D494A0F617E4</a:ObjectID>
<a:CreationDate>1157595528</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595528</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o52"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o51"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o36">
<a:ObjectID>40160F2D-4479-478E-892B-18D0B1A1A062</a:ObjectID>
<a:CreationDate>1157595572</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595572</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o53"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o55"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o39">
<a:ObjectID>243532DE-A537-4DD5-A343-383C2B50C92E</a:ObjectID>
<a:CreationDate>1157595572</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595572</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o54"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o55"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o42">
<a:ObjectID>5B98C9F8-8C7E-4C8B-8957-C867C3D28120</a:ObjectID>
<a:CreationDate>1157595590</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157595590</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o56"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o55"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o106">
<a:ObjectID>8FB77C28-358A-440B-BE04-00A9BE2A41BF</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o61"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o62"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o107">
<a:ObjectID>1B08CAB8-2A0B-48D1-B9E5-37CA97C51AAC</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o77"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o76"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o108">
<a:ObjectID>B4C8F430-035B-446F-8534-3B7F7EB8B186</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o92"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o80"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o109">
<a:ObjectID>F887D103-A017-4843-A35D-143D03CE19BD</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o97"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o80"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o110">
<a:ObjectID>4A9AFFE3-F3E8-4349-AF10-3CFE8BB83C20</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o52"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o82"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o111">
<a:ObjectID>87E2F457-8C15-4256-B222-67174576931D</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o98"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o82"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o112">
<a:ObjectID>FCCE5AE6-9735-41B0-8F48-E9EA8F390982</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o79"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o84"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o113">
<a:ObjectID>BCB9F4D3-F7C7-4158-B7A1-F6F50CE7FB9C</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o80"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o84"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o114">
<a:ObjectID>D97105F7-5A65-4F33-BF98-63F697A3DFCE</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o55"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o86"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o115">
<a:ObjectID>51126649-71DE-4AC9-80EB-FB4E0F4B0522</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o60"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o87"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o116">
<a:ObjectID>B134A95F-3FF7-4AA6-9968-EDDF28824731</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o66"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o88"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o117">
<a:ObjectID>C4F98436-9166-4C8E-A8B1-78EBBD44F16D</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o71"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o89"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o118">
<a:ObjectID>C0C1724B-B7EB-441F-B74D-F9353BCA6213</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o83"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o94"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o119">
<a:ObjectID>CB1AAD3D-6383-4898-B12D-6F703701C997</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o52"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o94"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o120">
<a:ObjectID>0A775DE4-934D-446A-B71D-482C67A115E6</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o84"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o94"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o121">
<a:ObjectID>11770484-1FC5-4EB3-94D1-FC7EFFCEAECD</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o96"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o94"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o122">
<a:ObjectID>7E035FDC-0962-41DE-AA81-FA0A7C7543EA</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o92"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o97"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o123">
<a:ObjectID>929C5ACF-FC2A-4DC9-8ABA-B436915C9F71</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o79"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o98"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o124">
<a:ObjectID>38590BFF-14C4-48E3-A6FB-3BC10AA47DEF</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o80"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o98"/>
</c:Object2>
</o:ExtendedDependency>
<o:ExtendedDependency Id="o125">
<a:ObjectID>766F890F-965F-43DB-B875-92BC2980CF8C</a:ObjectID>
<a:CreationDate>1172098424</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1172098424</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:Stereotype>DBCreateAfter (computed)</a:Stereotype>
<c:Object1>
<o:Procedure Ref="o96"/>
</c:Object1>
<c:Object2>
<o:Procedure Ref="o98"/>
</c:Object2>
</o:ExtendedDependency>
</c:ChildExtendedDependencies>
<c:TargetModels>
<o:TargetModel Id="o126">
<a:ObjectID>1792A0BD-13F4-4F81-B199-56518A1EE847</a:ObjectID>
<a:Name>Microsoft SQL Server 2000</a:Name>
<a:Code>MSSQLSRV2000</a:Code>
<a:CreationDate>1157594480</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157594480</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetModelURL>file:///%_DBMS%/sqlsrv2k.xdb</a:TargetModelURL>
<a:TargetModelID>E2B854D3-FF56-485F-BEF3-98AEC7E65DDC</a:TargetModelID>
<a:TargetModelClassID>4BA9F647-DAB1-11D1-9944-006097355D9B</a:TargetModelClassID>
<c:SessionShortcuts>
<o:Shortcut Ref="o3"/>
</c:SessionShortcuts>
</o:TargetModel>
<o:TargetModel Id="o127">
<a:ObjectID>C5B31FCA-45CA-4EA7-87A1-BA364C87E205</a:ObjectID>
<a:Name>DB RMT2 Base</a:Name>
<a:Code>DB_RMT2_Base</a:Code>
<a:CreationDate>1157594731</a:CreationDate>
<a:Creator>appdev</a:Creator>
<a:ModificationDate>1157594731</a:ModificationDate>
<a:Modifier>appdev</a:Modifier>
<a:TargetModelURL>file:///C|/projects/Common/Design/database/RMT2General.PDM</a:TargetModelURL>
<a:TargetModelID>1542F954-7B97-4789-813B-12307EBEBE3D</a:TargetModelID>
<a:TargetModelClassID>CDE44E21-9669-11D1-9914-006097355D9B</a:TargetModelClassID>
<c:SessionShortcuts>
<o:Shortcut Ref="o57"/>
<o:Shortcut Ref="o58"/>
<o:Shortcut Ref="o69"/>
<o:Shortcut Ref="o95"/>
</c:SessionShortcuts>
</o:TargetModel>
</c:TargetModels>
</o:Model>
</c:Children>
</o:RootObject>

</Model>