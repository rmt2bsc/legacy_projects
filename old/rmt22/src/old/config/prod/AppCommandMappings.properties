# This file contains numerous hash values that define the application's general and report command mappings.
#   
# A general command is thought to be in the format of: 
# <Application Module>.<Page Name>.<Action Name>.<Command Type>
# 
# Three things can be identified by a command that instructs how the appliation should navigate 
# based on certain conditions:  
#  1) the action handler that is to be executed
#  2) the URI that is to be executed upon success of the action handler.
#  3) the URI that is to be executed upon failure of the action handler.
#  4) the resource redirecting method to use.  Set to yes, y, or true
#
# For example, this is a common transaction action handler: 
#     Xact.CustomerSales.Search.handler=com.action.XactSalesOrderActionHandler
#     Xact.CustomerSales.Search.success=/forms/sales/ConfirmationPage.jsp
#     Xact.CustomerSales.Search.failure=/forms/sales/ErrorPage.jsp
#     Xact.CustomerSales.Search.cache=no  ["no" (the default) indicates servlet should use sendRedirect method to forward user to the next resource.  "yes" would mean to use forward(request, response)]
#
# To dynamically handle the "success" URI, leave success blank and pass the URI back to the 
# command servlet via the request object using RMT2ServletConst.REQUEST_DELAYED_RESPONSE as the attribute key.
#
#   
# A report command is thought to be in the format of: 
# <Application Module>.<Report file name>.<Action Name>.<Command Type>
# 
# Three things can be identified by a report command that instructs how the appliation should navigate 
# based on certain conditions:  
#  1) the action handler that is to be executed
#  2) the URI that is to be executed upon success of the action handler.
#  3) the URI that is to be executed upon failure of the action handler.
#
# For example, this is a common transaction action handler: 
#     Project.EmployeeTimesheet.prepare.handler=com.action.report.ProjectTimesheetEditAction
#     Project.EmployeeTimesheet.prepare.success=
#     Project.EmployeeTimesheet.prepare.failure=/forms/sales/ErrorPage.jsp
#
#     Project.EmployeeTimesheet.generate.handler=com.action.report.ProjectTimesheetEditAction
#     Project.EmployeeTimesheet.generate.success=
#     Project.EmployeeTimesheet.generate.failure=/forms/sales/ErrorPage.jsp
#
# Since most reports display the polling JSP page as a response to the prepare command, the "success" 
# URI should be left blank so that 
#   1) the action handler can set the polling URI for the command servlet via the request object 
#      using RMT2ServletConst.REQUEST_DELAYED_RESPONSE as the attribute key.
#   2) or the report is streamed to the client via the HttpServletResponse object.
#
# A remote service command exist in the format of :  <Service Category><Service Id><Command Type>.
# The service category exist as the portion of the servie URL that followss the servlet name.  The
# Service Id can be thouht of as the name used by an application to identify the service that is to be invoked.
# Command Type represents the portion of the command that can be identified as handler, success or error.
#


#################################
# Contact Page
#################################
Contact.Quote.submit.handler=com.quote.QuoteAction
Contact.Quote.submit.success=contactquote_confirm.jsp
Contact.Quote.submit.error=/error.jsp
Contact.Quote.submit.cache=no
Contact.Quote.reset.handler=com.quote.QuoteAction
Contact.Quote.reset..success=/contacts.jsp
Contact.Quote.reset..error

Home.Member.login.handler=com.api.security.UserLoginServiceConsumer
Home.Member.login.success=index.jsp
Home.Member.login.error=/error.jsp
Home.Member.login.cache=no
Home.Member.logoff.handler=com.api.security.UserLogoutServiceConsumer
Home.Member.logoff.success=logout_confirm.jsp
Home.Member.logoff.error=/error.jsp